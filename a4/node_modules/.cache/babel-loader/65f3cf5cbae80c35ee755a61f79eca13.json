{"ast":null,"code":"var _jsxFileName = \"/Users/ericboris/Developer/CSE442/a4/src/components/Block/Block.js\";\nimport React, { Component } from 'react';\nimport { Container, Form, Button } from 'react-bootstrap';\nimport { sha256 } from 'js-sha256';\nimport { NumberField, ReadOnlyTextField, TextAreaField } from '../Fields';\nimport MineButton from '../MineButton';\nimport get from '../../descriptionLoader';\nimport MineSettings from '../MineSettings';\nimport { TitleField, BodyField } from '../Fields'; // Parse the mining settings.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst difficulty = MineSettings.difficulty;\nconst pattern = MineSettings.pattern;\nconst [title, body] = get(\"https://cse442-21f.github.io/FP-Blockchain/descriptions/Block.txt\");\nconst GREEN = '#50C878';\nconst RED = 'FF0000';\nconst BLOCK_WIDTH = 400;\nconst BLOCK_HEIGHT = 410;\n\nclass SingleBlock extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      blockNumber: 1,\n      nonce: 72608,\n      data: \"\",\n      hash: \"\",\n      color: GREEN,\n      signed: true\n    };\n  }\n\n  getHash() {\n    return sha256(this.state.blockNumber.toString() + this.state.nonce.toString() + this.state.data.toString());\n  }\n\n  getHashPattern() {\n    return this.state.hash.substr(0, difficulty);\n  }\n\n  isSigned() {\n    return this.getHashPattern() === pattern ? true : false;\n  }\n\n  componentDidMount() {\n    let hash = this.getHash();\n    this.state({\n      hash\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    let hash = this.getHash();\n\n    if (prevState.hash !== hash) {\n      this.setState({\n        hash\n      });\n    }\n\n    let signed = this.isSigned();\n\n    if (prevState.signed != signed) {\n      this.setState({\n        signed\n      });\n      this.setState({\n        color: signed ? GREEN : RED\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(TitleField, {\n        titleText: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BodyField, {\n        bodyText: body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        style: {\n          'width': BLOCK_WIDTH,\n          'height': BLOCK_HEIGHT,\n          'background-color': this.state.color\n        },\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(NumberField, {\n            label: 'Block Number:',\n            value: this.state.blockNumber,\n            callback: blockNumber => this.setState({\n              blockNumber\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(NumberField, {\n            label: 'Nonce:',\n            value: this.state.nonce,\n            callback: nonce => this.setState({\n              nonce\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextAreaField, {\n            label: 'Data:',\n            callback: data => this.setState({\n              data\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ReadOnlyTextField, {\n            label: 'Hash:',\n            value: this.state.hash\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MineButton, {\n            blockNumber: this.state.blockNumber,\n            data: this.state.data,\n            callback: nonce => this.setState({\n              nonce\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SingleBlock;","map":{"version":3,"sources":["/Users/ericboris/Developer/CSE442/a4/src/components/Block/Block.js"],"names":["React","Component","Container","Form","Button","sha256","NumberField","ReadOnlyTextField","TextAreaField","MineButton","get","MineSettings","TitleField","BodyField","difficulty","pattern","title","body","GREEN","RED","BLOCK_WIDTH","BLOCK_HEIGHT","SingleBlock","constructor","props","state","blockNumber","nonce","data","hash","color","signed","getHash","toString","getHashPattern","substr","isSigned","componentDidMount","componentDidUpdate","prevProps","prevState","setState","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Container, Form, Button } from 'react-bootstrap';\nimport { sha256 } from 'js-sha256';\nimport { NumberField, ReadOnlyTextField, TextAreaField } from '../Fields';\nimport MineButton from '../MineButton';\nimport get from '../../descriptionLoader';\nimport MineSettings from '../MineSettings';\nimport { TitleField, BodyField } from '../Fields';\n\n// Parse the mining settings.\nconst difficulty = MineSettings.difficulty;\nconst pattern = MineSettings.pattern;\n\nconst [title, body] = get(\"https://cse442-21f.github.io/FP-Blockchain/descriptions/Block.txt\");\n\nconst GREEN = '#50C878';\nconst RED = 'FF0000';\n\nconst BLOCK_WIDTH = 400;\nconst BLOCK_HEIGHT = 410;\n\nclass SingleBlock extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            blockNumber: 1,\n            nonce: 72608,\n            data: \"\",\n            hash: \"\",\n            color: GREEN,\n            signed: true\n        };\n    }\n\n    getHash() {\n        return sha256(this.state.blockNumber.toString() + this.state.nonce.toString() + this.state.data.toString());\n    }\n\n    getHashPattern() {\n        return this.state.hash.substr(0, difficulty);\n    }\n\n    isSigned() {\n        return (this.getHashPattern() === pattern) ? true : false;\n    }\n\n    componentDidMount() {\n        let hash = this.getHash();\n        this.state({hash});\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        let hash = this.getHash();\n        if (prevState.hash !== hash) {\n            this.setState({hash});\n        }\n\n        let signed = this.isSigned();\n        if (prevState.signed != signed) {\n            this.setState({signed});\n            this.setState({color: signed ? GREEN : RED});\n        }\n    }\n    \n    render() {\n        return (\n            <Container>\n                <TitleField titleText={title} />\n                <BodyField bodyText={body} />\n                <Container \n                    style={{\n                        'width':BLOCK_WIDTH,\n                        'height':BLOCK_HEIGHT,\n                        'background-color':this.state.color\n                    }}\n                >\n                    <Form>\n                        <br/>\n                        <NumberField \n                            label={'Block Number:'} \n                            value={this.state.blockNumber} \n                            callback={(blockNumber) => this.setState({blockNumber})}\n                        />\n                        <NumberField \n                            label={'Nonce:'} \n                            value={this.state.nonce} \n                            callback={(nonce) => this.setState({nonce})} \n                        />\n                        <TextAreaField \n                            label={'Data:'} \n                            callback={(data) => this.setState({data})}\n                        />\n                        <ReadOnlyTextField \n                            label={'Hash:'}\n                            value={this.state.hash}\n                        />\n                        <br/>\n                        <MineButton \n                            blockNumber={this.state.blockNumber} \n                            data={this.state.data} \n                            callback={(nonce) => this.setState({nonce})}\n                        />\n                    </Form>\n                </Container>\n            </Container>\n        );\n    }\n}\n\nexport default SingleBlock;\n"]},"metadata":{},"sourceType":"module"}