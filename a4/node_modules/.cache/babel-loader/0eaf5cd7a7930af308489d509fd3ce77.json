{"ast":null,"code":"var _jsxFileName = \"/Users/ericboris/Developer/CSE442/a4/src/components/SingleBlock.js\";\nimport React, { Component } from 'react';\nimport { Container, Form, Button } from 'react-bootstrap';\nimport { sha256 } from 'js-sha256';\nimport { NumberField, ReadOnlyTextField, TextAreaField } from './Fields';\nimport MineButton from './MineButton';\nimport get from '../descriptionLoader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SingleBlock extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      blockNumber: 1,\n      nonce: 72608,\n      data: \"\",\n      hash: sha256(\"1\" + \"72608\" + \"\"),\n      color: \"#50C878\",\n      signed: true\n    };\n    this.handleColorChange = this.handleColorChange.bind(this);\n  }\n\n  handleColorChange() {\n    var col = this.state.color;\n    this.props.getColor(col);\n  }\n\n  getHash() {\n    return sha256(this.state.blockNumber.toString() + this.state.nonce.toString() + this.state.data.toString());\n  }\n\n  isSigned() {\n    if (this.state.hash.substr(0, 4) === \"0000\") {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    let hash = this.getHash();\n\n    if (prevState.hash !== hash) {\n      this.setState({\n        hash\n      });\n    }\n\n    let signed = this.isSigned();\n\n    if (prevState.signed != signed) {\n      this.setState({\n        signed\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(NumberField, {\n          label: 'Block Number:',\n          value: this.state.blockNumber,\n          callback: blockNumber => this.setState({\n            blockNumber\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(NumberField, {\n          label: 'Nonce:',\n          value: this.state.nonce,\n          callback: nonce => this.setState({\n            nonce\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextAreaField, {\n          label: 'Data:',\n          callback: data => this.setState({\n            data\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ReadOnlyTextField, {\n          label: 'Hash:',\n          value: this.state.hash\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MineButton, {\n          blockNumber: this.state.blockNumber,\n          data: this.state.data,\n          callback: nonce => this.updateNonce(nonce)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SingleBlock;","map":{"version":3,"sources":["/Users/ericboris/Developer/CSE442/a4/src/components/SingleBlock.js"],"names":["React","Component","Container","Form","Button","sha256","NumberField","ReadOnlyTextField","TextAreaField","MineButton","get","SingleBlock","constructor","props","state","blockNumber","nonce","data","hash","color","signed","handleColorChange","bind","col","getColor","getHash","toString","isSigned","substr","componentDidUpdate","prevProps","prevState","setState","render","updateNonce"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Container, Form, Button } from 'react-bootstrap';\nimport { sha256 } from 'js-sha256';\nimport { NumberField, ReadOnlyTextField, TextAreaField } from './Fields';\nimport MineButton from './MineButton';\nimport get from '../descriptionLoader';\n\nclass SingleBlock extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            blockNumber: 1,\n            nonce: 72608,\n            data: \"\",\n            hash: sha256(\"1\" + \"72608\" + \"\"),\n            color: \"#50C878\",\n            signed: true\n        };\n        this.handleColorChange = this.handleColorChange.bind(this);\n    }\n\n    handleColorChange() {\n        var col = this.state.color\n        this.props.getColor(col)        \n    }\n\n    getHash() {\n        return sha256(this.state.blockNumber.toString() + this.state.nonce.toString() + this.state.data.toString());\n    }\n\n    isSigned() {\n        if (this.state.hash.substr(0, 4) === \"0000\") {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        let hash = this.getHash();\n        if (prevState.hash !== hash) {\n            this.setState({hash});\n        }\n\n        let signed = this.isSigned();\n        if (prevState.signed != signed) {\n            this.setState({signed});\n        }\n    }\n    \n    render() {\n        return (\n            <Container fluid>\n                <Form>\n                    <br/>\n                    <NumberField \n                        label={'Block Number:'} \n                        value={this.state.blockNumber} \n                        callback={(blockNumber) => this.setState({blockNumber})}\n                    />\n                    <NumberField \n                        label={'Nonce:'} \n                        value={this.state.nonce} \n                        callback={(nonce) => this.setState({nonce})} \n                    />\n                    <TextAreaField \n                        label={'Data:'} \n                        callback={(data) => this.setState({data})}\n                    />\n                    <ReadOnlyTextField \n                        label={'Hash:'}\n                        value={this.state.hash}\n                    />\n                    <br/>\n                    <MineButton \n                        blockNumber={this.state.blockNumber} \n                        data={this.state.data} \n                        callback={(nonce) => this.updateNonce(nonce)}\n                    />\n                    <p></p>\n                </Form>\n            </Container>\n        );\n    }\n}\n\nexport default SingleBlock;\n"]},"metadata":{},"sourceType":"module"}