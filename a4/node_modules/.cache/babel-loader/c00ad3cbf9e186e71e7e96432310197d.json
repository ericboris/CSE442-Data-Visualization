{"ast":null,"code":"var _jsxFileName = \"/Users/ericboris/Developer/CSE442/a4/src/components/Distributed.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Container } from 'react-bootstrap';\nimport Blockchain from './Blockchain';\nimport { SecondTitleField } from './Fields';\nimport DefaultBlocks from './DefaultBlocks'; // Define component globals.                                                      \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GREEN = '#50C878';\nconst RED = '#FF0000';\nconst defaultHash = DefaultBlocks.block3.hash;\n\nfunction Distributed() {\n  _s();\n\n  // The last hash of each of the blockchains.\n  const [hash1, setHash1] = useState(defaultHash);\n  const [hash2, setHash2] = useState(defaultHash);\n  const [hash3, setHash3] = useState(defaultHash);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        'backgroundColor': RED\n      },\n      children: [/*#__PURE__*/_jsxDEV(SecondTitleField, {\n        titleText: 'Peer A'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Blockchain, {\n        peer: 0,\n        callback: response => this.handleUpdate(response)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(SecondTitleField, {\n        titleText: 'Peer B',\n        callback: response => this.handleUpdate(response)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Blockchain, {\n        peer: 1,\n        callback: response => this.handleUpdate(response)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(SecondTitleField, {\n        titleText: 'Peer C',\n        callback: response => this.handleUpdate(response)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Blockchain, {\n        peer: 2,\n        callback: response => this.handleUpdate(response)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Distributed, \"WrqFDA0/GciuDWsz/rv2l5V+iYI=\");\n\n_c = Distributed;\nexport default Distributed;\n\nvar _c;\n\n$RefreshReg$(_c, \"Distributed\");","map":{"version":3,"sources":["/Users/ericboris/Developer/CSE442/a4/src/components/Distributed.js"],"names":["React","useState","Container","Blockchain","SecondTitleField","DefaultBlocks","GREEN","RED","defaultHash","block3","hash","Distributed","hash1","setHash1","hash2","setHash2","hash3","setHash3","response","handleUpdate"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,gBAAT,QAAiC,UAAjC;AACA,OAAOC,aAAP,MAA0B,iBAA1B,C,CAEA;;;AACA,MAAMC,KAAK,GAAG,SAAd;AACA,MAAMC,GAAG,GAAG,SAAZ;AAEA,MAAMC,WAAW,GAAGH,aAAa,CAACI,MAAd,CAAqBC,IAAzC;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AACnB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAACO,WAAD,CAAlC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAACO,WAAD,CAAlC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAACO,WAAD,CAAlC;AAEA,sBACI,QAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA,4BACI;AAAK,MAAA,KAAK,EAAE;AAAC,2BAAkBD;AAAnB,OAAZ;AAAA,8BACI,QAAC,gBAAD;AAAkB,QAAA,SAAS,EAAE;AAA7B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,UAAD;AAAY,QAAA,IAAI,EAAE,CAAlB;AAAqB,QAAA,QAAQ,EAAGW,QAAD,IAAc,KAAKC,YAAL,CAAkBD,QAAlB;AAA7C;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAA,8BACI,QAAC,gBAAD;AAAkB,QAAA,SAAS,EAAE,QAA7B;AAAuC,QAAA,QAAQ,EAAGA,QAAD,IAAc,KAAKC,YAAL,CAAkBD,QAAlB;AAA/D;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,UAAD;AAAY,QAAA,IAAI,EAAE,CAAlB;AAAqB,QAAA,QAAQ,EAAGA,QAAD,IAAc,KAAKC,YAAL,CAAkBD,QAAlB;AAA7C;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eASI;AAAA,8BACI,QAAC,gBAAD;AAAkB,QAAA,SAAS,EAAE,QAA7B;AAAuC,QAAA,QAAQ,EAAGA,QAAD,IAAc,KAAKC,YAAL,CAAkBD,QAAlB;AAA/D;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,UAAD;AAAY,QAAA,IAAI,EAAE,CAAlB;AAAqB,QAAA,QAAQ,EAAGA,QAAD,IAAc,KAAKC,YAAL,CAAkBD,QAAlB;AAA7C;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GAtBQP,W;;KAAAA,W;AAwBT,eAAeA,WAAf","sourcesContent":["import React, {useState} from 'react';\nimport { Container } from 'react-bootstrap';\nimport Blockchain from './Blockchain'\nimport { SecondTitleField } from './Fields';\nimport DefaultBlocks from './DefaultBlocks';\n\n// Define component globals.                                                      \nconst GREEN = '#50C878';                                                          \nconst RED = '#FF0000'; \n\nconst defaultHash = DefaultBlocks.block3.hash;\n\nfunction Distributed() {\n    // The last hash of each of the blockchains.\n    const [hash1, setHash1] = useState(defaultHash);\n    const [hash2, setHash2] = useState(defaultHash);\n    const [hash3, setHash3] = useState(defaultHash);\n\n    return (\n        <Container fluid>\n            <div style={{'backgroundColor':RED}}>\n                <SecondTitleField titleText={'Peer A'} /> \n                <Blockchain peer={0} callback={(response) => this.handleUpdate(response)} />\n            </div>\n            <div>\n                <SecondTitleField titleText={'Peer B'} callback={(response) => this.handleUpdate(response)} />\n                <Blockchain peer={1} callback={(response) => this.handleUpdate(response)} />\n            </div>\n            <div>\n                <SecondTitleField titleText={'Peer C'} callback={(response) => this.handleUpdate(response)} />\n                <Blockchain peer={2} callback={(response) => this.handleUpdate(response)} />\n            </div>\n        </Container>\n    );\n}\n\nexport default Distributed;\n"]},"metadata":{},"sourceType":"module"}