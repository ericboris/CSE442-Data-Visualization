{"ast":null,"code":"var _jsxFileName = \"/Users/ericboris/Developer/CSE442/a4/src/components/Blockchain/Blockchain.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Container } from 'react-bootstrap';\nimport SingleBlock from './SingleBlock';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Blockchain(props) {\n  _s();\n\n  const [block1, setBlock1] = useState({\n    blockIndex: 0,\n    blockNumber: '1',\n    nonce: '11316',\n    data: '',\n    prevHash: '0000000000000000000000000000000000000000000000000000000000000000',\n    hash: '000015783b764259d382017d91a36d206d0600e2cbb3567748f46a33fe9297cf'\n  });\n  const [block2, setBlock2] = useState({\n    blockIndex: 1,\n    blockNumber: '2',\n    nonce: '35230',\n    data: '',\n    prevHash: '000015783b764259d382017d91a36d206d0600e2cbb3567748f46a33fe9297cf',\n    hash: '000012fa9b916eb9078f8d98a7864e697ae83ed54f5146bd84452cdafd043c19'\n  });\n  const [block3, setBlock3] = useState({\n    blockIndex: 2,\n    blockNumber: '3',\n    nonce: '12937',\n    data: '',\n    prevHash: '000012fa9b916eb9078f8d98a7864e697ae83ed54f5146bd84452cdafd043c19',\n    hash: '0000b9015ce2a08b61216ba5a0778545bf4ddd7ceb7bbd85dd8062b29a9140bf'\n  });\n  /*\n  const handleUpdate = ({index, block}) => {\n      console.log({index, block});\n      let newBlocks = [...blocks];\n      newBlocks[index] = block;\n      setBlocks(newBlocks);\n      if ((index + 1) < blocks.length) {\n          let nextBlock = blocks[index + 1];\n          nextBlock.prevHash = block.hash;\n          handleUpdate({index: index + 1, block: nextBlock});\n      }\n  };\n  */\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row justify-content-around\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-sm-4\",\n        children: /*#__PURE__*/_jsxDEV(SingleBlock, {\n          blockIndex: block1.blockIndex,\n          blockNumber: block1.blockNumber,\n          nonce: block1.nonce,\n          data: block1.data,\n          prevHash: block1.prevHash,\n          hash: block1.hash,\n          callback: block => setBlock1(block)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-sm-4\",\n        children: /*#__PURE__*/_jsxDEV(SingleBlock, {\n          blockIndex: block2.blockIndex,\n          blockNumber: block2.blockNumber,\n          nonce: block2.nonce,\n          data: block1.data,\n          prevHash: block2.hash,\n          hash: block2.hash,\n          callback: block => setBlock2(block)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-sm-4\",\n        children: /*#__PURE__*/_jsxDEV(SingleBlock, {\n          blockIndex: block3.blockIndex,\n          blockNumber: block3.blockNumber,\n          nonce: block3.nonce,\n          data: block3.data,\n          prevHash: block3.hash,\n          hash: block3.hash,\n          callback: block => setBlock3(block)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Blockchain, \"BpgT3NgK9lZfyqmz1TJE8fanW+Q=\");\n\n_c = Blockchain;\nexport default Blockchain;\n\nvar _c;\n\n$RefreshReg$(_c, \"Blockchain\");","map":{"version":3,"sources":["/Users/ericboris/Developer/CSE442/a4/src/components/Blockchain/Blockchain.js"],"names":["React","useState","useEffect","Container","SingleBlock","Blockchain","props","block1","setBlock1","blockIndex","blockNumber","nonce","data","prevHash","hash","block2","setBlock2","block3","setBlock3","block"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACvB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC;AACjCQ,IAAAA,UAAU,EAAE,CADqB;AAEjCC,IAAAA,WAAW,EAAE,GAFoB;AAGjCC,IAAAA,KAAK,EAAE,OAH0B;AAIjCC,IAAAA,IAAI,EAAE,EAJ2B;AAKjCC,IAAAA,QAAQ,EAAE,kEALuB;AAMjCC,IAAAA,IAAI,EAAE;AAN2B,GAAD,CAApC;AASA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC;AACjCQ,IAAAA,UAAU,EAAE,CADqB;AAEjCC,IAAAA,WAAW,EAAE,GAFoB;AAGjCC,IAAAA,KAAK,EAAE,OAH0B;AAIjCC,IAAAA,IAAI,EAAE,EAJ2B;AAKjCC,IAAAA,QAAQ,EAAE,kEALuB;AAMjCC,IAAAA,IAAI,EAAE;AAN2B,GAAD,CAApC;AASA,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC;AACjCQ,IAAAA,UAAU,EAAE,CADqB;AAEjCC,IAAAA,WAAW,EAAE,GAFoB;AAGjCC,IAAAA,KAAK,EAAE,OAH0B;AAIjCC,IAAAA,IAAI,EAAE,EAJ2B;AAKjCC,IAAAA,QAAQ,EAAE,kEALuB;AAMjCC,IAAAA,IAAI,EAAE;AAN2B,GAAD,CAApC;AAUA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI,sBACI,QAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA,2BACI;AAAK,MAAA,KAAK,EAAG,4BAAb;AAAA,8BACI;AAAK,QAAA,KAAK,EAAG,UAAb;AAAA,+BACI,QAAC,WAAD;AACI,UAAA,UAAU,EAAEP,MAAM,CAACE,UADvB;AAEI,UAAA,WAAW,EAAEF,MAAM,CAACG,WAFxB;AAGI,UAAA,KAAK,EAAEH,MAAM,CAACI,KAHlB;AAII,UAAA,IAAI,EAAEJ,MAAM,CAACK,IAJjB;AAKI,UAAA,QAAQ,EAAEL,MAAM,CAACM,QALrB;AAMI,UAAA,IAAI,EAAEN,MAAM,CAACO,IANjB;AAOI,UAAA,QAAQ,EAAGK,KAAD,IAAWX,SAAS,CAACW,KAAD;AAPlC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAYI;AAAK,QAAA,KAAK,EAAG,UAAb;AAAA,+BACK,QAAC,WAAD;AACG,UAAA,UAAU,EAAEJ,MAAM,CAACN,UADtB;AAEG,UAAA,WAAW,EAAEM,MAAM,CAACL,WAFvB;AAGG,UAAA,KAAK,EAAEK,MAAM,CAACJ,KAHjB;AAIG,UAAA,IAAI,EAAEJ,MAAM,CAACK,IAJhB;AAKG,UAAA,QAAQ,EAAEG,MAAM,CAACD,IALpB;AAMG,UAAA,IAAI,EAAEC,MAAM,CAACD,IANhB;AAOG,UAAA,QAAQ,EAAGK,KAAD,IAAWH,SAAS,CAACG,KAAD;AAPjC;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,cAZJ,eAuBI;AAAK,QAAA,KAAK,EAAG,UAAb;AAAA,+BACK,QAAC,WAAD;AACG,UAAA,UAAU,EAAEF,MAAM,CAACR,UADtB;AAEG,UAAA,WAAW,EAAEQ,MAAM,CAACP,WAFvB;AAGG,UAAA,KAAK,EAAEO,MAAM,CAACN,KAHjB;AAIG,UAAA,IAAI,EAAEM,MAAM,CAACL,IAJhB;AAKG,UAAA,QAAQ,EAAEK,MAAM,CAACH,IALpB;AAMG,UAAA,IAAI,EAAEG,MAAM,CAACH,IANhB;AAOG,UAAA,QAAQ,EAAGK,KAAD,IAAWD,SAAS,CAACC,KAAD;AAPjC;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,cAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAuCH;;GAlFQd,U;;KAAAA,U;AAoFT,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container } from 'react-bootstrap';\nimport SingleBlock from './SingleBlock';\n\nfunction Blockchain(props) {\n    const [block1, setBlock1] = useState({\n        blockIndex: 0,\n        blockNumber: '1',\n        nonce: '11316',\n        data: '',\n        prevHash: '0000000000000000000000000000000000000000000000000000000000000000',\n        hash: '000015783b764259d382017d91a36d206d0600e2cbb3567748f46a33fe9297cf',\n    });\n\n    const [block2, setBlock2] = useState({\n        blockIndex: 1,\n        blockNumber: '2',\n        nonce: '35230',\n        data: '',\n        prevHash: '000015783b764259d382017d91a36d206d0600e2cbb3567748f46a33fe9297cf',\n        hash: '000012fa9b916eb9078f8d98a7864e697ae83ed54f5146bd84452cdafd043c19',\n    });\n\n    const [block3, setBlock3] = useState({\n        blockIndex: 2,\n        blockNumber: '3',\n        nonce: '12937',\n        data: '',\n        prevHash: '000012fa9b916eb9078f8d98a7864e697ae83ed54f5146bd84452cdafd043c19',\n        hash: '0000b9015ce2a08b61216ba5a0778545bf4ddd7ceb7bbd85dd8062b29a9140bf',\n    });\n\n\n    /*\n    const handleUpdate = ({index, block}) => {\n        console.log({index, block});\n        let newBlocks = [...blocks];\n        newBlocks[index] = block;\n        setBlocks(newBlocks);\n        if ((index + 1) < blocks.length) {\n            let nextBlock = blocks[index + 1];\n            nextBlock.prevHash = block.hash;\n            handleUpdate({index: index + 1, block: nextBlock});\n        }\n    };\n    */\n\n    return (\n        <Container fluid>\n            <div class = \"row justify-content-around\" >\n                <div class = \"col-sm-4\">\n                    <SingleBlock \n                        blockIndex={block1.blockIndex} \n                        blockNumber={block1.blockNumber}\n                        nonce={block1.nonce} \n                        data={block1.data}\n                        prevHash={block1.prevHash}\n                        hash={block1.hash}\n                        callback={(block) => setBlock1(block)} \n                    />\n                </div>\n                <div class = \"col-sm-4\">\n                     <SingleBlock \n                        blockIndex={block2.blockIndex} \n                        blockNumber={block2.blockNumber}\n                        nonce={block2.nonce} \n                        data={block1.data}\n                        prevHash={block2.hash}\n                        hash={block2.hash}\n                        callback={(block) => setBlock2(block)} \n                    />\n                </div>\n                <div class = \"col-sm-4\">\n                     <SingleBlock \n                        blockIndex={block3.blockIndex} \n                        blockNumber={block3.blockNumber}\n                        nonce={block3.nonce} \n                        data={block3.data}\n                        prevHash={block3.hash}\n                        hash={block3.hash}\n                        callback={(block) => setBlock3(block)} \n                    />\n                </div>\n            </div>\n        </Container>\n    );\n}\n\nexport default Blockchain;\n"]},"metadata":{},"sourceType":"module"}