{"ast":null,"code":"var _jsxFileName = \"/Users/ericboris/Developer/CSE442/a4/src/components/MineButton.js\";\nimport { useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { sha256 } from 'js-sha256';\nimport MineSettings from './MineSettings'; // Parse the mining settings.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst difficulty = MineSettings.difficulty;\nconst maxNonce = MineSettings.maximumNonce;\nconst pattern = MineSettings.pattern;\n\nfunction* mine(blockNumber, data, prevHash) {\n  const hash = nonce => sha256(blockNumber + nonce + data + prevHash);\n\n  const isSigned = hash => hash.substr(0, difficulty) === pattern;\n\n  let nonce = 0;\n\n  while (!isSigned(hash(nonce))) {\n    yield nonce;\n    nonce++;\n  }\n}\n\nfunction MineButton(_ref) {\n  let {\n    blockNumber,\n    data,\n    prevHash,\n    callback\n  } = _ref;\n\n  /*\n  const mine = (nonce = 0) => {\n      const hash = nonce => sha256(blockNumber + nonce + data + prevHash);\n      const isSigned = hash => hash.substr(0, difficulty) === pattern;\n      while (!isSigned(hash(nonce))) {\n          nonce++;\n      }\n      return nonce;\n  }   \n  */\n  return /*#__PURE__*/_jsxDEV(Button, {\n    onClick: () => callback(mine()),\n    children: 'Mine!'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_c = MineButton;\n;\nexport { MineButton };\n\nvar _c;\n\n$RefreshReg$(_c, \"MineButton\");","map":{"version":3,"sources":["/Users/ericboris/Developer/CSE442/a4/src/components/MineButton.js"],"names":["useEffect","Button","sha256","MineSettings","difficulty","maxNonce","maximumNonce","pattern","mine","blockNumber","data","prevHash","hash","nonce","isSigned","substr","MineButton","callback"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB,C,CAEA;;;AACA,MAAMC,UAAU,GAAGD,YAAY,CAACC,UAAhC;AACA,MAAMC,QAAQ,GAAGF,YAAY,CAACG,YAA9B;AACA,MAAMC,OAAO,GAAGJ,YAAY,CAACI,OAA7B;;AAEA,UAAUC,IAAV,CAAeC,WAAf,EAA4BC,IAA5B,EAAkCC,QAAlC,EAA4C;AACxC,QAAMC,IAAI,GAAGC,KAAK,IAAIX,MAAM,CAACO,WAAW,GAAGI,KAAd,GAAsBH,IAAtB,GAA6BC,QAA9B,CAA5B;;AACA,QAAMG,QAAQ,GAAGF,IAAI,IAAIA,IAAI,CAACG,MAAL,CAAY,CAAZ,EAAeX,UAAf,MAA+BG,OAAxD;;AACA,MAAIM,KAAK,GAAG,CAAZ;;AACA,SAAO,CAACC,QAAQ,CAACF,IAAI,CAACC,KAAD,CAAL,CAAhB,EAA+B;AAC3B,UAAMA,KAAN;AACAA,IAAAA,KAAK;AACR;AACJ;;AAGD,SAASG,UAAT,OAA6D;AAAA,MAAzC;AAACP,IAAAA,WAAD;AAAcC,IAAAA,IAAd;AAAoBC,IAAAA,QAApB;AAA8BM,IAAAA;AAA9B,GAAyC;;AACzD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGI,sBACI,QAAC,MAAD;AACI,IAAA,OAAO,EAAE,MAAMA,QAAQ,CAACT,IAAI,EAAL,CAD3B;AAAA,cAGK;AAHL;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;KApBQQ,U;AAoBR;AAED,SAASA,UAAT","sourcesContent":["import { useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { sha256 } from 'js-sha256';\nimport MineSettings from './MineSettings';\n\n// Parse the mining settings.\nconst difficulty = MineSettings.difficulty;\nconst maxNonce = MineSettings.maximumNonce;\nconst pattern = MineSettings.pattern;\n\nfunction* mine(blockNumber, data, prevHash) {\n    const hash = nonce => sha256(blockNumber + nonce + data + prevHash);\n    const isSigned = hash => hash.substr(0, difficulty) === pattern;\n    let nonce = 0;\n    while (!isSigned(hash(nonce))) {\n        yield nonce;\n        nonce++;\n    }\n}\n\n\nfunction MineButton({blockNumber, data, prevHash, callback}) {\n    /*\n    const mine = (nonce = 0) => {\n        const hash = nonce => sha256(blockNumber + nonce + data + prevHash);\n        const isSigned = hash => hash.substr(0, difficulty) === pattern;\n        while (!isSigned(hash(nonce))) {\n            nonce++;\n        }\n        return nonce;\n    }   \n    */\n    \n\n    return (\n        <Button \n            onClick={() => callback(mine())}\n        >\n            {'Mine!'}\n        </Button>\n    );\n};\n\nexport { MineButton }\n"]},"metadata":{},"sourceType":"module"}