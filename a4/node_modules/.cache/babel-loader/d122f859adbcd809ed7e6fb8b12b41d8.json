{"ast":null,"code":"var _jsxFileName = \"/Users/ericboris/Developer/CSE442/a4/src/components/Blockchain/SingleBlock.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Container, Form } from 'react-bootstrap';\nimport { sha256 } from 'js-sha256';\nimport { NumberField, ReadOnlyTextField, TextAreaField } from '../Fields';\nimport { MineButton, mine } from '../MineButton';\nimport MineSettings from '../MineSettings'; // Parse the mining settings.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst difficulty = MineSettings.difficulty;\nconst pattern = MineSettings.pattern; // Define component globals.                                                      \n\nconst GREEN = '#50C878';\nconst RED = '#FF0000';\n\nfunction SingleBlock(props) {\n  _s();\n\n  const [block, setBlock] = useState(props.block);\n  const [color, setColor] = useState(GREEN);\n  const [isSigned, setIsSigned] = useState(true);\n\n  const setBlockNumber = blockNumber => {\n    let newBlock = { ...block\n    };\n    newBlock.blockNumber = blockNumber;\n    setBlock(newBlock);\n  };\n\n  useEffect(() => {\n    setBlock({ ...block,\n      hash: String(sha256(block.blockNumber + block.nonce + block.data + block.prevHash))\n    });\n  }, [block.blockNumber, block.nonce, block.data, block.prevHash]);\n  useEffect(() => {\n    setIsSigned(block.hash.substr(0, difficulty) === pattern ? true : false);\n  }, [block.hash]);\n  useEffect(() => {\n    setColor(isSigned ? GREEN : RED);\n  }, [isSigned]);\n  useEffect(() => {\n    props.callback(block);\n  }, [block]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        'width': 350,\n        'height': 500,\n        'background-color': color\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(NumberField, {\n          label: 'Block Number:',\n          value: block.blockNumber,\n          callback: blockNumber => setBlockNumber(blockNumber)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(NumberField, {\n          label: 'Nonce:',\n          value: block.nonce,\n          callback: nonce => setBlock({ ...block,\n            nonce\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextAreaField, {\n          label: 'Data:',\n          callback: data => setBlock({ ...block,\n            data\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ReadOnlyTextField, {\n          label: 'Prev:',\n          value: props.block.prevHash,\n          callback: prevHash => setBlock({ ...block,\n            prevHash\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ReadOnlyTextField, {\n          label: 'Hash:',\n          value: props.block.hash,\n          callback: hash => setBlock({ ...block,\n            hash\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MineButton, {\n          blockNumber: block.blockNumber,\n          data: block.data,\n          prevHash: props.block.prevHash,\n          callback: nonce => setBlock({ ...block,\n            nonce\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SingleBlock, \"U5zGFjv9NTzaMJO0fiqO/iFFVfw=\");\n\n_c = SingleBlock;\nexport default SingleBlock;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleBlock\");","map":{"version":3,"sources":["/Users/ericboris/Developer/CSE442/a4/src/components/Blockchain/SingleBlock.js"],"names":["React","useState","useEffect","Container","Form","sha256","NumberField","ReadOnlyTextField","TextAreaField","MineButton","mine","MineSettings","difficulty","pattern","GREEN","RED","SingleBlock","props","block","setBlock","color","setColor","isSigned","setIsSigned","setBlockNumber","blockNumber","newBlock","hash","String","nonce","data","prevHash","substr","callback"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Form } from 'react-bootstrap';\nimport { sha256 } from 'js-sha256';\nimport { NumberField, ReadOnlyTextField, TextAreaField } from '../Fields';\nimport { MineButton, mine } from '../MineButton';\nimport MineSettings from '../MineSettings';\n\n// Parse the mining settings.\nconst difficulty = MineSettings.difficulty;\nconst pattern = MineSettings.pattern;\n\n// Define component globals.                                                      \nconst GREEN = '#50C878';                                                          \nconst RED = '#FF0000';\n\nfunction SingleBlock(props) {\n    const [block, setBlock] = useState(props.block);\n    const [color, setColor] = useState(GREEN);\n    const [isSigned, setIsSigned] = useState(true);\n\n    const setBlockNumber = (blockNumber) => {\n        let newBlock = {...block};\n        newBlock.blockNumber = blockNumber;\n        setBlock(newBlock);\n    }\n    \n    useEffect(() => {\n        setBlock({...block, hash:(String(sha256(block.blockNumber + block.nonce + block.data + block.prevHash)))});\n    }, [block.blockNumber, block.nonce, block.data, block.prevHash]);\n\n    useEffect(() => {\n        setIsSigned(block.hash.substr(0, difficulty) === pattern ? true : false);\n    }, [block.hash]);\n\n    useEffect(() => {\n        setColor(isSigned ? GREEN : RED);\n    }, [isSigned]);\n\n    useEffect(() => {\n        props.callback(block);\n    }, [block]);\n\n    return (\n        <Container>\n            <Container\n                style={{\n                    'width':350,\n                    'height':500,\n                    'background-color':color\n                }}\n            >\n                <Form>\n                    <br/>\n                    <NumberField\n                        label={'Block Number:'}\n                        value={block.blockNumber}\n                        callback={(blockNumber) => setBlockNumber(blockNumber)}\n                    />\n                    <NumberField\n                        label={'Nonce:'}\n                        value={block.nonce}\n                        callback={(nonce) => setBlock({...block, nonce})}\n                    />\n                    <TextAreaField\n                        label={'Data:'}\n                        callback={(data) => setBlock({...block, data})}\n                    />\n                    <ReadOnlyTextField\n                        label={'Prev:'}\n                        value={props.block.prevHash}\n                        callback={(prevHash) => setBlock({...block, prevHash})}\n                    />\n                    <ReadOnlyTextField\n                        label={'Hash:'}\n                        value={props.block.hash}\n                        callback={(hash) => setBlock({...block, hash})}\n                    />\n                    <br/>\n                    <MineButton\n                        blockNumber={block.blockNumber}\n                        data={block.data}\n                        prevHash={props.block.prevHash}\n                        callback={(nonce) => setBlock({...block, nonce})}\n                    />\n                </Form>\n            </Container>\n        </Container>\n    );\n}\n\nexport default SingleBlock;\n"]},"metadata":{},"sourceType":"module"}