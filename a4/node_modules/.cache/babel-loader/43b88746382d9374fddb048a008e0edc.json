{"ast":null,"code":"var _jsxFileName = \"/Users/ericboris/Developer/CSE442/a4/src/components/Mine.js\";\nimport { Button } from 'react-bootstrap';\nimport { sha256 } from 'js-sha256';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Mine() {\n  /* Find a nonce s.t. the hash of the string concatenation of\n   * blockNumber, nonce, and data fields (IN THAT ORDER!) results in a hash\n   * that starts with n=difficulty many zeros.\n   * Updates the state with the found nonce and hash.\n   */\n  function mine(blockNumber, data) {\n    let sequence = null;\n    let hash = null;\n\n    for (let nonce = 0; nonce <= maximumNonce; nonce++) {\n      sequence = blockNumber.toString() + nonce.toString() + data.toString();\n      hash = sha256(sequence);\n\n      if (hash.substr(0, difficulty) === this.state.pattern) {\n        return {\n          nonce,\n          hash\n        };\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Button, {\n    onClick: event => {\n      console.log(\"CLICKED\");\n      event.preventDefault();\n    },\n    children: \"Mine!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Mine;\n;\nexport default Mine;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mine\");","map":{"version":3,"sources":["/Users/ericboris/Developer/CSE442/a4/src/components/Mine.js"],"names":["Button","sha256","Mine","mine","blockNumber","data","sequence","hash","nonce","maximumNonce","toString","substr","difficulty","state","pattern","event","console","log","preventDefault"],"mappings":";AAAA,SAASA,MAAT,QAAuB,iBAAvB;AACA,SAASC,MAAT,QAAuB,WAAvB;;;AAEA,SAASC,IAAT,GAAgB;AACZ;AACJ;AACA;AACA;AACA;AACI,WAASC,IAAT,CAAcC,WAAd,EAA2BC,IAA3B,EAAiC;AAC7B,QAAIC,QAAQ,GAAG,IAAf;AACA,QAAIC,IAAI,GAAG,IAAX;;AACA,SAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,IAAIC,YAA7B,EAA2CD,KAAK,EAAhD,EAAoD;AAChDF,MAAAA,QAAQ,GAAGF,WAAW,CAACM,QAAZ,KAAyBF,KAAK,CAACE,QAAN,EAAzB,GAA4CL,IAAI,CAACK,QAAL,EAAvD;AACAH,MAAAA,IAAI,GAAGN,MAAM,CAACK,QAAD,CAAb;;AACA,UAAIC,IAAI,CAACI,MAAL,CAAY,CAAZ,EAAeC,UAAf,MAA+B,KAAKC,KAAL,CAAWC,OAA9C,EAAuD;AACnD,eAAO;AAACN,UAAAA,KAAD;AAAQD,UAAAA;AAAR,SAAP;AACH;AACJ;AACL;;AAEA,sBACI,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAGQ,KAAD,IAAW;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAF,MAAAA,KAAK,CAACG,cAAN;AACH,KAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;KA1BQhB,I;AA0BR;AAED,eAAeA,IAAf","sourcesContent":["import { Button } from 'react-bootstrap';\nimport { sha256 } from 'js-sha256';\n\nfunction Mine() {\n    /* Find a nonce s.t. the hash of the string concatenation of\n     * blockNumber, nonce, and data fields (IN THAT ORDER!) results in a hash\n     * that starts with n=difficulty many zeros.\n     * Updates the state with the found nonce and hash.\n     */\n    function mine(blockNumber, data) {\n        let sequence = null;\n        let hash = null;\n        for (let nonce = 0; nonce <= maximumNonce; nonce++) {\n            sequence = blockNumber.toString() + nonce.toString() + data.toString();\n            hash = sha256(sequence);\n            if (hash.substr(0, difficulty) === this.state.pattern) {\n                return {nonce, hash};\n            }\n        }\n   }\n\n    return (\n        <Button onClick={(event) => {\n            console.log(\"CLICKED\");\n            event.preventDefault();\n        }}>\n            Mine!\n        </Button>\n    );\n};\n\nexport default Mine;\n"]},"metadata":{},"sourceType":"module"}