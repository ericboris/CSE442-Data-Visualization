{"ast":null,"code":"var _jsxFileName = \"/Users/ericboris/Developer/CSE442/a4/src/components/Blockchain/Blockchain.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Container } from 'react-bootstrap';\nimport SingleBlock from './SingleBlock';\nimport DefaultBlocks from './DefaultBlocks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Blockchain(props) {\n  _s();\n\n  /*\n  const [block1, setBlock1] = useState(DefaultBlocks.block1);\n  const [block2, setBlock2] = useState(DefaultBlocks.block2);\n  const [block3, setBlock3] = useState(DefaultBlocks.block3);\n  */\n  const [blocks, setBlocks] = useState(DefaultBlocks); // Update block2 prevHash to match block1 hash.\n\n  /*\n  useEffect(() => {\n      setBlock2({...block2, prevHash: block1.hash});\n  }, [block1]);\n   // Update block3 prevHash to match block2 hash.\n  useEffect(() => {\n      setBlock3({...block3, prevHash: block2.hash});\n  }, [block2]);\n  */\n  // Update the block at index.\n\n  function updateBlock(index, block) {\n    const newBlocks = [...blocks];\n    newBlocks[index] = block;\n    setBlocks(newBlocks);\n  } // Update each blocks prevHash.\n\n\n  useEffect(() => {\n    const newBlocks = [...blocks];\n\n    for (let i = 1; i < newBlocks.length; i++) {\n      newBlocks[i].prevHash = newBlocks[i - 1].hash;\n    }\n\n    setBlocks(newBlocks);\n  }, [blocks]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row justify-content-around\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-sm-4\",\n        children: /*#__PURE__*/_jsxDEV(SingleBlock, {\n          index: 0,\n          block: blocks[0],\n          updateBlock: block => updateBlock(0, block)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-sm-4\",\n        children: /*#__PURE__*/_jsxDEV(SingleBlock, {\n          index: 1,\n          block: blocks[1],\n          updateBlock: block => updateBlock(1, block)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-sm-4\",\n        children: /*#__PURE__*/_jsxDEV(SingleBlock, {\n          index: 2,\n          block: blocks[2],\n          updateBlock: block => updateBlock(2, block)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Blockchain, \"D2EehpiTxiKNlrPSAHNqWzBIwI0=\");\n\n_c = Blockchain;\nexport default Blockchain;\n\nvar _c;\n\n$RefreshReg$(_c, \"Blockchain\");","map":{"version":3,"sources":["/Users/ericboris/Developer/CSE442/a4/src/components/Blockchain/Blockchain.js"],"names":["React","useState","useEffect","Container","SingleBlock","DefaultBlocks","Blockchain","props","blocks","setBlocks","updateBlock","index","block","newBlocks","i","length","prevHash","hash"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACvB;AACJ;AACA;AACA;AACA;AACI,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAACI,aAAD,CAApC,CANuB,CAQvB;;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGI;;AACA,WAASK,WAAT,CAAqBC,KAArB,EAA4BC,KAA5B,EAAmC;AAC/B,UAAMC,SAAS,GAAG,CAAC,GAAGL,MAAJ,CAAlB;AACAK,IAAAA,SAAS,CAACF,KAAD,CAAT,GAAmBC,KAAnB;AACAH,IAAAA,SAAS,CAACI,SAAD,CAAT;AACH,GAzBsB,CA2BvB;;;AACAX,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMW,SAAS,GAAG,CAAC,GAAGL,MAAJ,CAAlB;;AACA,SAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,SAAS,CAACE,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACvCD,MAAAA,SAAS,CAACC,CAAD,CAAT,CAAaE,QAAb,GAAwBH,SAAS,CAACC,CAAC,GAAC,CAAH,CAAT,CAAeG,IAAvC;AACH;;AACDR,IAAAA,SAAS,CAACI,SAAD,CAAT;AACH,GANQ,EAMN,CAACL,MAAD,CANM,CAAT;AAQA,sBACI,QAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA,2BACI;AAAK,MAAA,KAAK,EAAG,4BAAb;AAAA,8BACI;AAAK,QAAA,KAAK,EAAG,UAAb;AAAA,+BACI,QAAC,WAAD;AACI,UAAA,KAAK,EAAE,CADX;AAEI,UAAA,KAAK,EAAEA,MAAM,CAAC,CAAD,CAFjB;AAGI,UAAA,WAAW,EAAGI,KAAD,IAAWF,WAAW,CAAC,CAAD,EAAIE,KAAJ;AAHvC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAK,QAAA,KAAK,EAAG,UAAb;AAAA,+BACK,QAAC,WAAD;AACG,UAAA,KAAK,EAAE,CADV;AAEG,UAAA,KAAK,EAAEJ,MAAM,CAAC,CAAD,CAFhB;AAGG,UAAA,WAAW,EAAGI,KAAD,IAAWF,WAAW,CAAC,CAAD,EAAIE,KAAJ;AAHtC;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,cARJ,eAeI;AAAK,QAAA,KAAK,EAAG,UAAb;AAAA,+BACK,QAAC,WAAD;AACG,UAAA,KAAK,EAAE,CADV;AAEG,UAAA,KAAK,EAAEJ,MAAM,CAAC,CAAD,CAFhB;AAGG,UAAA,WAAW,EAAGI,KAAD,IAAWF,WAAW,CAAC,CAAD,EAAIE,KAAJ;AAHtC;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,cAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH;;GA/DQN,U;;KAAAA,U;AAiET,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container } from 'react-bootstrap';\nimport SingleBlock from './SingleBlock';\nimport DefaultBlocks from './DefaultBlocks';\n\nfunction Blockchain(props) {\n    /*\n    const [block1, setBlock1] = useState(DefaultBlocks.block1);\n    const [block2, setBlock2] = useState(DefaultBlocks.block2);\n    const [block3, setBlock3] = useState(DefaultBlocks.block3);\n    */\n    const [blocks, setBlocks] = useState(DefaultBlocks);\n\n    // Update block2 prevHash to match block1 hash.\n    /*\n    useEffect(() => {\n        setBlock2({...block2, prevHash: block1.hash});\n    }, [block1]);\n\n    // Update block3 prevHash to match block2 hash.\n    useEffect(() => {\n        setBlock3({...block3, prevHash: block2.hash});\n    }, [block2]);\n    */\n\n    // Update the block at index.\n    function updateBlock(index, block) {\n        const newBlocks = [...blocks];\n        newBlocks[index] = block;\n        setBlocks(newBlocks);\n    }\n\n    // Update each blocks prevHash.\n    useEffect(() => {\n        const newBlocks = [...blocks];\n        for (let i = 1; i < newBlocks.length; i++) {\n            newBlocks[i].prevHash = newBlocks[i-1].hash;\n        }\n        setBlocks(newBlocks);\n    }, [blocks]);\n\n    return (\n        <Container fluid>\n            <div class = \"row justify-content-around\" >\n                <div class = \"col-sm-4\">\n                    <SingleBlock \n                        index={0}\n                        block={blocks[0]}\n                        updateBlock={(block) => updateBlock(0, block)}\n                    />\n                </div>\n                <div class = \"col-sm-4\">\n                     <SingleBlock \n                        index={1}\n                        block={blocks[1]}\n                        updateBlock={(block) => updateBlock(1, block)}\n                    />\n                </div>\n                <div class = \"col-sm-4\">\n                     <SingleBlock \n                        index={2}\n                        block={blocks[2]}\n                        updateBlock={(block) => updateBlock(2, block)}\n                    />\n                </div>\n            </div>\n        </Container>\n    );\n}\n\nexport default Blockchain;\n"]},"metadata":{},"sourceType":"module"}