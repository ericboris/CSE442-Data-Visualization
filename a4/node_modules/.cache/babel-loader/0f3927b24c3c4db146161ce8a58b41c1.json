{"ast":null,"code":"var _jsxFileName = \"/Users/ericboris/Developer/CSE442/a4/src/components/Blockchain/Blockchain.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Container } from 'react-bootstrap';\nimport SingleBlock from './SingleBlock';\nimport DefaultBlocks from './DefaultBlocks';\nimport { sha256 } from 'js-sha256';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Blockchain(props) {\n  _s();\n\n  const [block1, setBlock1] = useState(DefaultBlocks.block1);\n  const [block2, setBlock2] = useState(DefaultBlocks.block2);\n  const [block3, setBlock3] = useState(DefaultBlocks.block3);\n  useEffect(() => {\n    let newBlock2 = { ...block2\n    };\n    newBlock2.prevHash = block1.hash;\n    newBlock2.hash = String(sha256(block2.blockNumber + block2.nonce + block2.data + newBlock2.prevHash));\n    setBlock2(newBlock2);\n  });\n  useEffect(() => {\n    let newBlock3 = { ...block3\n    };\n    newBlock3.prevHash = block2.hash;\n    newBlock3.hash = String(sha256(block3.blockNumber + block3.nonce + block3.data + newBlock3.prevHash));\n    setBlock3(newBlock3);\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row justify-content-around\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-sm-4\",\n        children: /*#__PURE__*/_jsxDEV(SingleBlock, {\n          block: block1,\n          setBlockNumber: blockNumber => setBlock1({ ...block1,\n            blockNumber\n          }),\n          setNonce: nonce => setBlock1({ ...block1,\n            nonce\n          }),\n          setData: data => setBlock1({ ...block1,\n            data\n          }),\n          setPrevHash: prevHash => setBlock1({ ...block1,\n            prevHash\n          }),\n          hash: hash => setBlock1({ ...block1,\n            hash\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-sm-4\",\n        children: /*#__PURE__*/_jsxDEV(SingleBlock, {\n          block: block2,\n          setBlockNumber: blockNumber => setBlock2({ ...block2,\n            blockNumber\n          }),\n          setNonce: nonce => setBlock2({ ...block2,\n            nonce\n          }),\n          setData: data => setBlock2({ ...block2,\n            data\n          }),\n          setPrevHash: prevHash => setBlock2({ ...block2,\n            prevHash\n          }),\n          hash: hash => setBlock2({ ...block2,\n            hash\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-sm-4\",\n        children: /*#__PURE__*/_jsxDEV(SingleBlock, {\n          block: block3,\n          setBlockNumber: blockNumber => setBlock3({ ...block3,\n            blockNumber\n          }),\n          setNonce: nonce => setBlock3({ ...block3,\n            nonce\n          }),\n          setData: data => setBlock3({ ...block3,\n            data\n          }),\n          setPrevHash: prevHash => setBlock3({ ...block3,\n            prevHash\n          }),\n          hash: hash => setBlock3({ ...block3,\n            hash\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Blockchain, \"JeYY8eIef/z7kj1dYaReIYvmI40=\");\n\n_c = Blockchain;\nexport default Blockchain;\n\nvar _c;\n\n$RefreshReg$(_c, \"Blockchain\");","map":{"version":3,"sources":["/Users/ericboris/Developer/CSE442/a4/src/components/Blockchain/Blockchain.js"],"names":["React","useState","useEffect","Container","SingleBlock","DefaultBlocks","sha256","Blockchain","props","block1","setBlock1","block2","setBlock2","block3","setBlock3","newBlock2","prevHash","hash","String","blockNumber","nonce","data","newBlock3"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container } from 'react-bootstrap';\nimport SingleBlock from './SingleBlock';\nimport DefaultBlocks from './DefaultBlocks';\nimport { sha256 } from 'js-sha256';\n\nfunction Blockchain(props) {\n    const [block1, setBlock1] = useState(DefaultBlocks.block1);\n    const [block2, setBlock2] = useState(DefaultBlocks.block2);\n    const [block3, setBlock3] = useState(DefaultBlocks.block3);\n\n    useEffect(() => {\n        let newBlock2 = {...block2};\n        newBlock2.prevHash = block1.hash;\n        newBlock2.hash = String(sha256(block2.blockNumber + block2.nonce + block2.data + newBlock2.prevHash));\n        setBlock2(newBlock2);\n    });\n\n    useEffect(() => {\n        let newBlock3 = {...block3};\n        newBlock3.prevHash = block2.hash;\n        newBlock3.hash = String(sha256(block3.blockNumber + block3.nonce + block3.data + newBlock3.prevHash));\n        setBlock3(newBlock3);\n    });\n\n    return (\n        <Container fluid>\n            <div class = \"row justify-content-around\" >\n                <div class = \"col-sm-4\">\n                    <SingleBlock \n                        block={block1}\n                        setBlockNumber={(blockNumber) => setBlock1({...block1, blockNumber})}\n                        setNonce={(nonce) => setBlock1({...block1, nonce})}\n                        setData={(data) => setBlock1({...block1, data})}\n                        setPrevHash={(prevHash) => setBlock1({...block1, prevHash})}\n                        hash={(hash) => setBlock1({...block1, hash})}\n                    />\n                </div>\n                <div class = \"col-sm-4\">\n                     <SingleBlock \n                        block={block2}\n                        setBlockNumber={(blockNumber) => setBlock2({...block2, blockNumber})}\n                        setNonce={(nonce) => setBlock2({...block2, nonce})}\n                        setData={(data) => setBlock2({...block2, data})}\n                        setPrevHash={(prevHash) => setBlock2({...block2, prevHash})}\n                        hash={(hash) => setBlock2({...block2, hash})}\n                    />\n                </div>\n                <div class = \"col-sm-4\">\n                     <SingleBlock \n                        block={block3}\n                        setBlockNumber={(blockNumber) => setBlock3({...block3, blockNumber})}\n                        setNonce={(nonce) => setBlock3({...block3, nonce})}\n                        setData={(data) => setBlock3({...block3, data})}\n                        setPrevHash={(prevHash) => setBlock3({...block3, prevHash})}\n                        hash={(hash) => setBlock3({...block3, hash})}\n                    />\n                </div>\n            </div>\n        </Container>\n    );\n}\n\nexport default Blockchain;\n"]},"metadata":{},"sourceType":"module"}