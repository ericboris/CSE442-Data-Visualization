{"ast":null,"code":"var _jsxFileName = \"/Users/ericboris/Developer/CSE442/a4/src/components/Block.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Container, Form, Row } from 'react-bootstrap';\nimport { NumberField, ReadOnlyTextField, TextAreaField } from './Fields';\nimport { MineButton } from './MineButton';\nimport MineSettings from './MineSettings';\nimport { sha256 } from 'js-sha256';\nimport { SwitchButton } from './Switch';\nimport DefaultBlocks from './DefaultBlocks'; // Parse the mining settings.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst difficulty = MineSettings.difficulty;\nconst pattern = MineSettings.pattern; // Define component globals.                                                      \n\nconst GREEN = '#90be6d';\nconst RED = '#F9844A';\nconst redBORDER = '#F9C74F';\nconst greenBORDER = '#4D908E';\nconst defaultBlock = DefaultBlocks.block0;\n\nfunction Block() {\n  _s();\n\n  const [block, setBlock] = useState(defaultBlock);\n  const [isSwitchOn, setIsSwitchOn] = useState(false);\n  const {\n    blockNumber,\n    nonce,\n    data\n  } = block;\n\n  const hash = () => sha256(blockNumber + nonce + data);\n\n  const isSigned = () => hash().substr(0, difficulty) === pattern;\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      'width': 350,\n      'height': 455,\n      'backgroundColor': isSigned() ? GREEN : RED,\n      'border': '5px solid',\n      'borderColor': isSigned() ? greenBORDER : redBORDER\n    },\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(NumberField, {\n        label: 'Block Number:',\n        value: blockNumber,\n        callback: blockNumber => setBlock({ ...block,\n          blockNumber\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(NumberField, {\n        label: 'Nonce:',\n        value: nonce,\n        callback: nonce => setBlock({ ...block,\n          nonce\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextAreaField, {\n        label: 'Data:',\n        callback: data => setBlock({ ...block,\n          data\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReadOnlyTextField, {\n        label: 'Hash:',\n        value: hash()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"g-2\",\n        children: [/*#__PURE__*/_jsxDEV(MineButton, {\n          blockNumber: blockNumber,\n          data: data,\n          block: block,\n          setBlock: setBlock,\n          isSwitchOn: isSwitchOn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SwitchButton, {\n          isSwitchOn: isSwitchOn,\n          setIsSwitchOn: setIsSwitchOn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Block, \"Srar0KpeQphF3ahj+EkegzNmZ9Y=\");\n\n_c = Block;\nexport default Block;\n\nvar _c;\n\n$RefreshReg$(_c, \"Block\");","map":{"version":3,"sources":["/Users/ericboris/Developer/CSE442/a4/src/components/Block.js"],"names":["React","useState","useEffect","Container","Form","Row","NumberField","ReadOnlyTextField","TextAreaField","MineButton","MineSettings","sha256","SwitchButton","DefaultBlocks","difficulty","pattern","GREEN","RED","redBORDER","greenBORDER","defaultBlock","block0","Block","block","setBlock","isSwitchOn","setIsSwitchOn","blockNumber","nonce","data","hash","isSigned","substr"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Form, Row } from 'react-bootstrap';\nimport { NumberField, ReadOnlyTextField, TextAreaField } from './Fields';\nimport { MineButton } from './MineButton';\nimport MineSettings from './MineSettings';\nimport { sha256 } from 'js-sha256';\nimport { SwitchButton } from './Switch';\nimport DefaultBlocks from './DefaultBlocks';\n\n// Parse the mining settings.\nconst difficulty = MineSettings.difficulty;\nconst pattern = MineSettings.pattern;\n\n// Define component globals.                                                      \nconst GREEN = '#90be6d';\nconst RED = '#F9844A';\nconst redBORDER = '#F9C74F';\nconst greenBORDER = '#4D908E';\n\nconst defaultBlock = DefaultBlocks.block0;\n\nfunction Block() {\n    const [block, setBlock] = useState(defaultBlock);\n    const [isSwitchOn, setIsSwitchOn] = useState(false);\n\n    const {blockNumber, nonce, data} = block;\n    const hash = () => sha256(blockNumber + nonce + data);\n    const isSigned = () => hash().substr(0, difficulty) === pattern;\n\n    return (\n        <Container\n            style={{\n                'width':350,\n                'height':455,\n                'backgroundColor':isSigned() ? GREEN : RED,\n                'border': '5px solid',\n                'borderColor': isSigned() ? greenBORDER : redBORDER\n            }}\n        >\n            <Form>\n                <NumberField\n                    label={'Block Number:'}\n                    value={blockNumber}\n                    callback={(blockNumber) => setBlock({...block, blockNumber})}\n                />\n                <NumberField\n                    label={'Nonce:'}\n                    value={nonce}\n                    callback={(nonce) => setBlock({...block, nonce})}\n                />\n                <TextAreaField\n                    label={'Data:'}\n                    callback={(data) => setBlock({...block, data})}\n                />\n                <ReadOnlyTextField\n                    label={'Hash:'}\n                    value={hash()}\n                />\n                <br />\n                <Row className=\"g-2\">\n                    <MineButton\n                        blockNumber={blockNumber}\n                        data={data}\n                        block={block}\n                        setBlock={setBlock}\n                        isSwitchOn = {isSwitchOn}\n                    />\n                    <SwitchButton\n                        isSwitchOn = {isSwitchOn}\n                        setIsSwitchOn={setIsSwitchOn}\n                    />\n                </Row>\n            </Form>\n        </Container>\n    );\n}\n\nexport default Block;\n"]},"metadata":{},"sourceType":"module"}