{"ast":null,"code":"var _jsxFileName = \"/Users/ericboris/Developer/CSE442/a4/src/components/Blockchain/Blockchain.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Container } from 'react-bootstrap';\nimport SingleBlock from './SingleBlock';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst block1 = {\n  blockIndex: 0,\n  blockNumber: '1',\n  nonce: '11316',\n  data: '',\n  prevHash: '0000000000000000000000000000000000000000000000000000000000000000',\n  hash: '000015783b764259d382017d91a36d206d0600e2cbb3567748f46a33fe9297cf'\n};\nconst block2 = {\n  blockIndex: 1,\n  blockNumber: '2',\n  nonce: '35230',\n  data: '',\n  prevHash: '000015783b764259d382017d91a36d206d0600e2cbb3567748f46a33fe9297cf',\n  hash: '000012fa9b916eb9078f8d98a7864e697ae83ed54f5146bd84452cdafd043c19'\n};\nconst block3 = {\n  blockIndex: 2,\n  blockNumber: '3',\n  nonce: '12937',\n  data: '',\n  prevHash: '000012fa9b916eb9078f8d98a7864e697ae83ed54f5146bd84452cdafd043c19',\n  hash: '0000b9015ce2a08b61216ba5a0778545bf4ddd7ceb7bbd85dd8062b29a9140bf'\n};\n\nfunction Blockchain(props) {\n  _s();\n\n  const [blocks, setBlocks] = useState([block1, block2, block3]);\n\n  const handleUpdate = _ref => {\n    let {\n      index,\n      block\n    } = _ref;\n    let newBlocks = [...blocks];\n    newBlocks[index] = block;\n    setBlocks(newBlocks);\n\n    if (index + 1 < blocks.length) {\n      handleUpdate({\n        index: index + 1,\n        block: blocks[index + 1]\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row justify-content-around\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-sm-4\",\n        children: /*#__PURE__*/_jsxDEV(SingleBlock, {\n          blockIndex: blocks[0].blockIndex,\n          blockNumber: blocks[0].blockNumber,\n          nonce: blocks[0].nonce,\n          data: blocks[0].data,\n          prevHash: blocks[0].prevHash,\n          hash: blocks[0].hash,\n          callback: response => handleUpdate(response)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-sm-4\",\n        children: /*#__PURE__*/_jsxDEV(SingleBlock, {\n          blockIndex: blocks[1].blockIndex,\n          blockNumber: blocks[1].blockNumber,\n          nonce: blocks[1].nonce,\n          data: blocks[1].data,\n          prevHash: blocks[0].hash,\n          hash: blocks[1].hash,\n          callback: response => handleUpdate(response)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-sm-4\",\n        children: /*#__PURE__*/_jsxDEV(SingleBlock, {\n          blockIndex: blocks[2].blockIndex,\n          blockNumber: blocks[2].blockNumber,\n          nonce: blocks[2].nonce,\n          data: blocks[2].data,\n          prevHash: blocks[1].hash,\n          hash: blocks[2].hash,\n          callback: response => handleUpdate(response)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Blockchain, \"fK4qeJDGmXqx9AUTXUPCif96D0E=\");\n\n_c = Blockchain;\nexport default Blockchain;\n\nvar _c;\n\n$RefreshReg$(_c, \"Blockchain\");","map":{"version":3,"sources":["/Users/ericboris/Developer/CSE442/a4/src/components/Blockchain/Blockchain.js"],"names":["React","useState","useEffect","Container","SingleBlock","block1","blockIndex","blockNumber","nonce","data","prevHash","hash","block2","block3","Blockchain","props","blocks","setBlocks","handleUpdate","index","block","newBlocks","length","response"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container } from 'react-bootstrap';\nimport SingleBlock from './SingleBlock';\n\nconst block1 = {\n    blockIndex: 0,\n    blockNumber: '1',\n    nonce: '11316',\n    data: '',\n    prevHash: '0000000000000000000000000000000000000000000000000000000000000000',\n    hash: '000015783b764259d382017d91a36d206d0600e2cbb3567748f46a33fe9297cf',\n};\n\nconst block2 = {\n    blockIndex: 1,\n    blockNumber: '2',\n    nonce: '35230',\n    data: '',\n    prevHash: '000015783b764259d382017d91a36d206d0600e2cbb3567748f46a33fe9297cf',\n    hash: '000012fa9b916eb9078f8d98a7864e697ae83ed54f5146bd84452cdafd043c19',\n};\n\nconst block3 = {\n    blockIndex: 2,\n    blockNumber: '3',\n    nonce: '12937',\n    data: '',\n    prevHash: '000012fa9b916eb9078f8d98a7864e697ae83ed54f5146bd84452cdafd043c19',\n    hash: '0000b9015ce2a08b61216ba5a0778545bf4ddd7ceb7bbd85dd8062b29a9140bf',\n}\n\n\n\nfunction Blockchain(props) {\n    const [blocks, setBlocks] = useState([block1, block2, block3]);\n\n    const handleUpdate = ({index, block}) => {\n        let newBlocks = [...blocks];\n        newBlocks[index] = block;\n        setBlocks(newBlocks);\n        if ((index + 1) < blocks.length) {\n            handleUpdate({index: index + 1, block: blocks[index + 1]});\n        }\n    };\n\n    return (\n        <Container fluid>\n            <div class = \"row justify-content-around\" >\n                <div class = \"col-sm-4\">\n                    <SingleBlock \n                        blockIndex={blocks[0].blockIndex} \n                        blockNumber={blocks[0].blockNumber}\n                        nonce={blocks[0].nonce} \n                        data={blocks[0].data}\n                        prevHash={blocks[0].prevHash}\n                        hash={blocks[0].hash}\n                        callback={(response) => handleUpdate(response)} \n                    />\n                </div>\n                <div class = \"col-sm-4\">\n                     <SingleBlock \n                        blockIndex={blocks[1].blockIndex} \n                        blockNumber={blocks[1].blockNumber}\n                        nonce={blocks[1].nonce} \n                        data={blocks[1].data}\n                        prevHash={blocks[0].hash}\n                        hash={blocks[1].hash}\n                        callback={(response) => handleUpdate(response)} \n                    />\n                </div>\n                <div class = \"col-sm-4\">\n                     <SingleBlock \n                        blockIndex={blocks[2].blockIndex} \n                        blockNumber={blocks[2].blockNumber}\n                        nonce={blocks[2].nonce} \n                        data={blocks[2].data}\n                        prevHash={blocks[1].hash}\n                        hash={blocks[2].hash}\n                        callback={(response) => handleUpdate(response)} \n                    />\n                </div>\n            </div>\n        </Container>\n    );\n}\n\nexport default Blockchain;\n"]},"metadata":{},"sourceType":"module"}