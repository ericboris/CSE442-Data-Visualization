{"ast":null,"code":"var _jsxFileName = \"/Users/ericboris/Developer/CSE442/a4/src/components/MineButton.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { sha256 } from 'js-sha256';\nimport MineSettings from './MineSettings'; // Parse the mining settings.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst difficulty = MineSettings.difficulty;\nconst maximumNonce = MineSettings.maximumNonce;\nconst pattern = MineSettings.pattern;\n\nfunction MineButton(_ref) {\n  _s();\n\n  let {\n    isSigned,\n    callback,\n    block,\n    setBlock\n  } = _ref;\n  const [nonce, setNonce] = useState(0);\n  const [isMining, setIsMining] = useState(false);\n  useEffect(() => {\n    if (isMining) {\n      const interval = setInterval(() => {\n        console.log(\"isMining\", isMining);\n        console.log(\"NONCE\", nonce);\n        setNonce(nonce + 1);\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [isMining, nonce]);\n  return /*#__PURE__*/_jsxDEV(Button, {\n    onClick: setIsMining(true),\n    children: 'Mine!'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MineButton, \"TuWc1rOyVmke43Vav70Go4/fNmo=\");\n\n_c = MineButton;\n;\nexport { MineButton };\n\nvar _c;\n\n$RefreshReg$(_c, \"MineButton\");","map":{"version":3,"sources":["/Users/ericboris/Developer/CSE442/a4/src/components/MineButton.js"],"names":["useState","useEffect","Button","sha256","MineSettings","difficulty","maximumNonce","pattern","MineButton","isSigned","callback","block","setBlock","nonce","setNonce","isMining","setIsMining","interval","setInterval","console","log","clearInterval"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB,C,CAEA;;;AACA,MAAMC,UAAU,GAAGD,YAAY,CAACC,UAAhC;AACA,MAAMC,YAAY,GAAGF,YAAY,CAACE,YAAlC;AACA,MAAMC,OAAO,GAAGH,YAAY,CAACG,OAA7B;;AAEA,SAASC,UAAT,OAA2D;AAAA;;AAAA,MAAvC;AAACC,IAAAA,QAAD;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA,KAArB;AAA4BC,IAAAA;AAA5B,GAAuC;AACvD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,KAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIc,QAAJ,EAAc;AACV,YAAME,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC/BC,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBL,QAAxB;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBP,KAArB;AACAC,QAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACH,OAJ2B,EAIzB,IAJyB,CAA5B;AAMA,aAAO,MAAMQ,aAAa,CAACJ,QAAD,CAA1B;AACH;AACJ,GAVQ,EAUN,CAACF,QAAD,EAAWF,KAAX,CAVM,CAAT;AAYA,sBACI,QAAC,MAAD;AACI,IAAA,OAAO,EAAEG,WAAW,CAAC,IAAD,CADxB;AAAA,cAGK;AAHL;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAvBQR,U;;KAAAA,U;AAuBR;AAED,SAASA,UAAT","sourcesContent":["import { useState, useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { sha256 } from 'js-sha256';\nimport MineSettings from './MineSettings';\n\n// Parse the mining settings.\nconst difficulty = MineSettings.difficulty;\nconst maximumNonce = MineSettings.maximumNonce;\nconst pattern = MineSettings.pattern;\n\nfunction MineButton({isSigned, callback, block, setBlock}) {\n    const [nonce, setNonce] = useState(0);\n    const [isMining, setIsMining] = useState(false);\n\n    useEffect(() => {\n        if (isMining) {\n            const interval = setInterval(() => {\n                console.log(\"isMining\", isMining);\n                console.log(\"NONCE\", nonce);\n                setNonce(nonce + 1);\n            }, 1000);\n\n            return () => clearInterval(interval);\n        }\n    }, [isMining, nonce]);\n\n    return (\n        <Button \n            onClick={setIsMining(true)}\n        >\n            {'Mine!'}\n        </Button>\n    );\n};\n\nexport { MineButton }\n"]},"metadata":{},"sourceType":"module"}