{"ast":null,"code":"var _jsxFileName = \"/Users/ericboris/Developer/CSE442/a4/src/components/Mine.js\";\nimport { Button } from 'react-bootstrap';\nimport { sha256 } from 'js-sha256';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Mine(_ref) {\n  let {\n    blockNumber,\n    nonce,\n    data\n  } = _ref;\n\n  /* Find a nonce s.t. the hash of the string concatenation of\n   * blockNumber, nonce, and data fields (IN THAT ORDER!) results in a hash\n   * that starts with n=difficulty many zeros.\n   * Updates the state with the found nonce and hash.\n   */\n\n  /*\n  function mine(blockNumber, data) {\n     let sequence = null;\n     let hash = null;\n     for (let nonce = 0; nonce <= maximumNonce; nonce++) {\n         sequence = blockNumber.toString() + nonce.toString() + data.toString();\n         hash = sha256(sequence);\n         if (hash.substr(0, difficulty) === this.state.pattern) {\n             return {nonce, hash};\n         }\n     }\n  }    */\n  return /*#__PURE__*/_jsxDEV(Button, {\n    onClick: event => {\n      event.preventDefault();\n      console.log(\"CLICKED\");\n    },\n    children: \"Mine!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Mine;\n;\nexport default Mine;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mine\");","map":{"version":3,"sources":["/Users/ericboris/Developer/CSE442/a4/src/components/Mine.js"],"names":["Button","sha256","Mine","blockNumber","nonce","data","event","preventDefault","console","log"],"mappings":";AAAA,SAASA,MAAT,QAAuB,iBAAvB;AACA,SAASC,MAAT,QAAuB,WAAvB;;;AAEA,SAASC,IAAT,OAA0C;AAAA,MAA5B;AAACC,IAAAA,WAAD;AAAcC,IAAAA,KAAd;AAAqBC,IAAAA;AAArB,GAA4B;;AACtC;AACJ;AACA;AACA;AACA;;AACK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEI,sBACI,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAGC,KAAD,IAAW;AACxBA,MAAAA,KAAK,CAACC,cAAN;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH,KAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;KA3BQP,I;AA2BR;AAED,eAAeA,IAAf","sourcesContent":["import { Button } from 'react-bootstrap';\nimport { sha256 } from 'js-sha256';\n\nfunction Mine({blockNumber, nonce, data}) {\n    /* Find a nonce s.t. the hash of the string concatenation of\n     * blockNumber, nonce, and data fields (IN THAT ORDER!) results in a hash\n     * that starts with n=difficulty many zeros.\n     * Updates the state with the found nonce and hash.\n     */\n     /*\n    function mine(blockNumber, data) {\n        let sequence = null;\n        let hash = null;\n        for (let nonce = 0; nonce <= maximumNonce; nonce++) {\n            sequence = blockNumber.toString() + nonce.toString() + data.toString();\n            hash = sha256(sequence);\n            if (hash.substr(0, difficulty) === this.state.pattern) {\n                return {nonce, hash};\n            }\n        }\n   }    */\n\n    return (\n        <Button onClick={(event) => {\n            event.preventDefault();\n            console.log(\"CLICKED\");\n        }}>\n            Mine!\n        </Button>\n    );\n};\n\nexport default Mine;\n"]},"metadata":{},"sourceType":"module"}