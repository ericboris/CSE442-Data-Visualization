{"ast":null,"code":"var _jsxFileName = \"/Users/ericboris/Developer/CSE442/a4/src/components/SingleBlock.js\";\nimport React, { Component } from 'react';\nimport { Container, Form, Button } from 'react-bootstrap';\nimport { sha256 } from 'js-sha256';\nimport { NumberField, HashField, TextAreaField } from './Fields';\nimport MineButton from './MineButton';\nimport get from '../descriptionLoader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SingleBlock extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pattern: '0000',\n      blockNumber: 1,\n      nonce: 72608,\n      data: \"\",\n      hash: sha256(\"1\" + \"72608\" + \"\"),\n      color: \"#50C878\" // Green\n\n    };\n    this.handleColorChange = this.handleColorChange.bind(this);\n  }\n\n  handleColorChange() {\n    var col = this.state.color;\n    this.props.getColor(col);\n  }\n\n  getHashData() {\n    return this.state.blockNumber.toString() + this.state.nonce.toString() + this.state.data.toString();\n  } // TODO Abstract and generalize\n\n\n  isSigned() {\n    return this.state.hash.substr(0, 4) === '0000';\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onChange: event => {\n          if (this.isSigned()) {\n            console.log(\"SIGNED\");\n          } else {\n            console.log(\"NOT SIGNED\");\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(NumberField, {\n          name: 'Block Number:',\n          value: this.state.blockNumber,\n          callback: blockNumber => this.setState({\n            blockNumber\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(NumberField, {\n          name: 'Nonce:',\n          value: this.state.nonce,\n          callback: nonce => this.setState({\n            nonce\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextAreaField, {\n          name: 'Data:',\n          callback: data => this.setState({\n            data\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(HashField, {\n          data: this.getHashData()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MineButton, {\n          blockNumber: this.state.blockNumber,\n          data: this.state.data,\n          callback: nonce => this.setState({\n            nonce\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SingleBlock;","map":{"version":3,"sources":["/Users/ericboris/Developer/CSE442/a4/src/components/SingleBlock.js"],"names":["React","Component","Container","Form","Button","sha256","NumberField","HashField","TextAreaField","MineButton","get","SingleBlock","constructor","props","state","pattern","blockNumber","nonce","data","hash","color","handleColorChange","bind","col","getColor","getHashData","toString","isSigned","substr","render","event","console","log","setState"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Container, Form, Button } from 'react-bootstrap';\nimport { sha256 } from 'js-sha256';\nimport { NumberField, HashField, TextAreaField } from './Fields';\nimport MineButton from './MineButton';\nimport get from '../descriptionLoader';\n\nclass SingleBlock extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pattern: '0000',\n            blockNumber: 1,\n            nonce: 72608,\n            data: \"\",\n            hash: sha256(\"1\" + \"72608\" + \"\"),\n            color: \"#50C878\" // Green\n        };\n        this.handleColorChange = this.handleColorChange.bind(this);\n    }\n\n    handleColorChange() {\n        var col = this.state.color\n        this.props.getColor(col)        \n    }\n\n    getHashData() {\n        return this.state.blockNumber.toString() + this.state.nonce.toString() + this.state.data.toString();\n    }\n\n    // TODO Abstract and generalize\n    isSigned() {\n        return this.state.hash.substr(0, 4) === '0000';\n    }\n\n    render() {\n        return (\n            <Container fluid>\n                <Form onChange={(event) => {\n                    if (this.isSigned()) {\n                        console.log(\"SIGNED\");\n                    } else {\n                        console.log(\"NOT SIGNED\");\n                    }\n                }}>\n                    <br/>\n                    <NumberField \n                        name={'Block Number:'} \n                        value={this.state.blockNumber} \n                        callback={(blockNumber) => this.setState({blockNumber})} \n                    />\n                    <NumberField \n                        name={'Nonce:'} \n                        value={this.state.nonce} \n                        callback={(nonce) => this.setState({nonce})} \n                    />\n                    <TextAreaField \n                        name={'Data:'} \n                        callback={(data) => this.setState({data})} \n                    />\n                    <HashField data={this.getHashData()} />\n                    <br/>\n                    <MineButton \n                        blockNumber={this.state.blockNumber} \n                        data={this.state.data} \n                        callback={(nonce) => this.setState({nonce})}\n                    />\n                    <p></p>\n                </Form>\n            </Container>\n        );\n    }\n}\n\nexport default SingleBlock;\n"]},"metadata":{},"sourceType":"module"}