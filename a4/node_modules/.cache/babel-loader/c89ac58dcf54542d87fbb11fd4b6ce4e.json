{"ast":null,"code":"var _jsxFileName = \"/Users/ericboris/Developer/CSE442/a4/src/components/Block/Block.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Container, Form, Row } from 'react-bootstrap';\nimport { NumberField, ReadOnlyTextField, TextAreaField } from '../Fields';\nimport { MineButton } from '../MineButton';\nimport MineSettings from '../MineSettings';\nimport { sha256 } from 'js-sha256'; //import Switch from '../Switch';\n\nimport { SwitchButton } from '../Switch';\nimport DefaultBlocks from '../Blockchain/DefaultBlocks'; // Parse the mining settings.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst difficulty = MineSettings.difficulty;\nconst pattern = MineSettings.pattern; // Define component globals.                                                      \n\nconst GREEN = '#50C878';\nconst RED = '#FF0000';\nconst defaultBlock = DefaultBlocks.block1;\n\nfunction Block() {\n  _s();\n\n  const [block, setBlock] = useState(defaultBlock);\n  const [isSwitchOn, setIsSwitchOn] = useState(false);\n  useEffect(() => {\n    setBlock({ ...block,\n      prevHash: \"\"\n    });\n  });\n  const {\n    blockNumber,\n    nonce,\n    data,\n    prevHash\n  } = block;\n\n  const hash = () => sha256(blockNumber + nonce + data + prevHash);\n\n  const isSigned = () => hash().substr(0, difficulty) === pattern;\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      'width': 350,\n      'height': 525,\n      'background-color': isSigned() ? GREEN : RED\n    },\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(NumberField, {\n        label: 'Block Number:',\n        value: blockNumber,\n        callback: blockNumber => setBlock({ ...block,\n          blockNumber\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(NumberField, {\n        label: 'Nonce:',\n        value: nonce,\n        callback: nonce => setBlock({ ...block,\n          nonce\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextAreaField, {\n        label: 'Data:',\n        callback: data => setBlock({ ...block,\n          data\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReadOnlyTextField, {\n        label: 'Hash:',\n        value: hash()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"g-2\",\n        children: [/*#__PURE__*/_jsxDEV(MineButton, {\n          blockNumber: blockNumber,\n          data: data,\n          block: block,\n          setBlock: setBlock,\n          isSwitchOn: isSwitchOn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SwitchButton, {\n          isSwitchOn: isSwitchOn,\n          setIsSwitchOn: setIsSwitchOn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Block, \"T1bahNkzUA3EfcGXxjcHIiQM5z8=\");\n\n_c = Block;\nexport default Block;\n\nvar _c;\n\n$RefreshReg$(_c, \"Block\");","map":{"version":3,"sources":["/Users/ericboris/Developer/CSE442/a4/src/components/Block/Block.js"],"names":["React","useState","useEffect","Container","Form","Row","NumberField","ReadOnlyTextField","TextAreaField","MineButton","MineSettings","sha256","SwitchButton","DefaultBlocks","difficulty","pattern","GREEN","RED","defaultBlock","block1","Block","block","setBlock","isSwitchOn","setIsSwitchOn","prevHash","blockNumber","nonce","data","hash","isSigned","substr"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,iBAArC;AACA,SAASC,WAAT,EAAsBC,iBAAtB,EAAyCC,aAAzC,QAA8D,WAA9D;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,SAASC,MAAT,QAAuB,WAAvB,C,CACA;;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,OAAOC,aAAP,MAA0B,6BAA1B,C,CAEA;;;AACA,MAAMC,UAAU,GAAGJ,YAAY,CAACI,UAAhC;AACA,MAAMC,OAAO,GAAGL,YAAY,CAACK,OAA7B,C,CAEA;;AACA,MAAMC,KAAK,GAAG,SAAd;AACA,MAAMC,GAAG,GAAG,SAAZ;AAEA,MAAMC,YAAY,GAAGL,aAAa,CAACM,MAAnC;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAACiB,YAAD,CAAlC;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BvB,QAAQ,CAAC,KAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZoB,IAAAA,QAAQ,CAAC,EAAC,GAAGD,KAAJ;AAAWI,MAAAA,QAAQ,EAAC;AAApB,KAAD,CAAR;AACH,GAFQ,CAAT;AAIA,QAAM;AAACC,IAAAA,WAAD;AAAcC,IAAAA,KAAd;AAAqBC,IAAAA,IAArB;AAA2BH,IAAAA;AAA3B,MAAuCJ,KAA7C;;AACA,QAAMQ,IAAI,GAAG,MAAMlB,MAAM,CAACe,WAAW,GAAGC,KAAd,GAAsBC,IAAtB,GAA6BH,QAA9B,CAAzB;;AACA,QAAMK,QAAQ,GAAG,MAAMD,IAAI,GAAGE,MAAP,CAAc,CAAd,EAAiBjB,UAAjB,MAAiCC,OAAxD;;AAEA,sBACI,QAAC,SAAD;AACI,IAAA,KAAK,EAAE;AACH,eAAQ,GADL;AAEH,gBAAS,GAFN;AAGH,0BAAmBe,QAAQ,KAAKd,KAAL,GAAaC;AAHrC,KADX;AAAA,2BAOI,QAAC,IAAD;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,WAAD;AACI,QAAA,KAAK,EAAE,eADX;AAEI,QAAA,KAAK,EAAES,WAFX;AAGI,QAAA,QAAQ,EAAGA,WAAD,IAAiBJ,QAAQ,CAAC,EAAC,GAAGD,KAAJ;AAAWK,UAAAA;AAAX,SAAD;AAHvC;AAAA;AAAA;AAAA;AAAA,cAFJ,eAOI,QAAC,WAAD;AACI,QAAA,KAAK,EAAE,QADX;AAEI,QAAA,KAAK,EAAEC,KAFX;AAGI,QAAA,QAAQ,EAAGA,KAAD,IAAWL,QAAQ,CAAC,EAAC,GAAGD,KAAJ;AAAWM,UAAAA;AAAX,SAAD;AAHjC;AAAA;AAAA;AAAA;AAAA,cAPJ,eAYI,QAAC,aAAD;AACI,QAAA,KAAK,EAAE,OADX;AAEI,QAAA,QAAQ,EAAGC,IAAD,IAAUN,QAAQ,CAAC,EAAC,GAAGD,KAAJ;AAAWO,UAAAA;AAAX,SAAD;AAFhC;AAAA;AAAA;AAAA;AAAA,cAZJ,eAgBI,QAAC,iBAAD;AACI,QAAA,KAAK,EAAE,OADX;AAEI,QAAA,KAAK,EAAEC,IAAI;AAFf;AAAA;AAAA;AAAA;AAAA,cAhBJ,eAoBI;AAAA;AAAA;AAAA;AAAA,cApBJ,eAqBI,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACI,QAAC,UAAD;AACI,UAAA,WAAW,EAAEH,WADjB;AAEI,UAAA,IAAI,EAAEE,IAFV;AAGI,UAAA,KAAK,EAAEP,KAHX;AAII,UAAA,QAAQ,EAAEC,QAJd;AAKI,UAAA,UAAU,EAAIC;AALlB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAQI,QAAC,YAAD;AACI,UAAA,UAAU,EAAIA,UADlB;AAEI,UAAA,aAAa,EAAEC;AAFnB;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,cArBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA8CH;;GA1DQJ,K;;KAAAA,K;AA4DT,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Form, Row } from 'react-bootstrap';\nimport { NumberField, ReadOnlyTextField, TextAreaField } from '../Fields';\nimport { MineButton } from '../MineButton';\nimport MineSettings from '../MineSettings';\nimport { sha256 } from 'js-sha256';\n//import Switch from '../Switch';\nimport { SwitchButton } from '../Switch';\nimport DefaultBlocks from '../Blockchain/DefaultBlocks';\n\n// Parse the mining settings.\nconst difficulty = MineSettings.difficulty;\nconst pattern = MineSettings.pattern;\n\n// Define component globals.                                                      \nconst GREEN = '#50C878';                                                          \nconst RED = '#FF0000';\n\nconst defaultBlock = DefaultBlocks.block1;\n\nfunction Block() {\n    const [block, setBlock] = useState(defaultBlock);\n    const [isSwitchOn, setIsSwitchOn] = useState(false);\n\n    useEffect(() => {\n        setBlock({...block, prevHash:\"\"});\n    });\n\n    const {blockNumber, nonce, data, prevHash} = block;\n    const hash = () => sha256(blockNumber + nonce + data + prevHash);\n    const isSigned = () => hash().substr(0, difficulty) === pattern;\n\n    return (\n        <Container\n            style={{\n                'width':350,\n                'height':525,\n                'background-color':isSigned() ? GREEN : RED\n            }}\n        >\n            <Form>\n                <br/>\n                <NumberField\n                    label={'Block Number:'}\n                    value={blockNumber}\n                    callback={(blockNumber) => setBlock({...block, blockNumber})}\n                />\n                <NumberField\n                    label={'Nonce:'}\n                    value={nonce}\n                    callback={(nonce) => setBlock({...block, nonce})}\n                />\n                <TextAreaField\n                    label={'Data:'}\n                    callback={(data) => setBlock({...block, data})}\n                />\n                <ReadOnlyTextField\n                    label={'Hash:'}\n                    value={hash()}\n                />\n                <br/>\n                <Row className=\"g-2\">\n                    <MineButton\n                        blockNumber={blockNumber}\n                        data={data}\n                        block={block}\n                        setBlock={setBlock}\n                        isSwitchOn = {isSwitchOn}\n                    />\n                    <SwitchButton\n                        isSwitchOn = {isSwitchOn}\n                        setIsSwitchOn={setIsSwitchOn}\n                    />\n                </Row>\n\n            </Form>\n        </Container>\n    );\n}\n\nexport default Block;\n"]},"metadata":{},"sourceType":"module"}