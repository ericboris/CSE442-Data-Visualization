{"ast":null,"code":"var _jsxFileName = \"/Users/ericboris/Developer/CSE442/a4/src/components/MineButton.js\";\nimport { Button } from 'react-bootstrap';\nimport { sha256 } from 'js-sha256';\nimport MineSettings from './MineSettings'; // Parse the mining settings.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst difficulty = MineSettings.difficulty;\nconst maximumNonce = MineSettings.maximumNonce;\nconst pattern = MineSettings.pattern;\n/* Find a nonce s.t. the hash of the string concatenation of\n * blockNumber, nonce, and data fields (IN THAT ORDER!) results in a hash\n * that starts with n=difficulty many zeros.\n */\n\nfunction mine(blockNumber, data) {\n  let prevHash = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n  let sequence = null;\n  let hash = null;\n\n  for (let nonce = 0; nonce <= maximumNonce; nonce++) {\n    sequence = blockNumber.toString() + nonce.toString() + data.toString();\n    hash = sha256(sequence);\n\n    if (hash.substr(0, difficulty) === pattern) {\n      return nonce;\n    }\n  }\n}\n\nfunction MineButton(_ref) {\n  let {\n    blockNumber,\n    data,\n    callback\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Button, {\n    onClick: event => {\n      callback(mine(blockNumber, data));\n      event.preventDefault();\n    },\n    children: \"Mine!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_c = MineButton;\n;\nexport { MineButton, mine };\n\nvar _c;\n\n$RefreshReg$(_c, \"MineButton\");","map":{"version":3,"sources":["/Users/ericboris/Developer/CSE442/a4/src/components/MineButton.js"],"names":["Button","sha256","MineSettings","difficulty","maximumNonce","pattern","mine","blockNumber","data","prevHash","sequence","hash","nonce","toString","substr","MineButton","callback","event","preventDefault"],"mappings":";AAAA,SAASA,MAAT,QAAuB,iBAAvB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB,C,CAEA;;;AACA,MAAMC,UAAU,GAAGD,YAAY,CAACC,UAAhC;AACA,MAAMC,YAAY,GAAGF,YAAY,CAACE,YAAlC;AACA,MAAMC,OAAO,GAAGH,YAAY,CAACG,OAA7B;AAEA;AACA;AACA;AACA;;AACA,SAASC,IAAT,CAAcC,WAAd,EAA2BC,IAA3B,EAA8C;AAAA,MAAbC,QAAa,uEAAJ,EAAI;AAC1C,MAAIC,QAAQ,GAAG,IAAf;AACA,MAAIC,IAAI,GAAG,IAAX;;AACA,OAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,IAAIR,YAA7B,EAA2CQ,KAAK,EAAhD,EAAoD;AAChDF,IAAAA,QAAQ,GAAGH,WAAW,CAACM,QAAZ,KAAyBD,KAAK,CAACC,QAAN,EAAzB,GAA4CL,IAAI,CAACK,QAAL,EAAvD;AACAF,IAAAA,IAAI,GAAGV,MAAM,CAACS,QAAD,CAAb;;AACA,QAAIC,IAAI,CAACG,MAAL,CAAY,CAAZ,EAAeX,UAAf,MAA+BE,OAAnC,EAA4C;AACxC,aAAOO,KAAP;AACH;AACJ;AACJ;;AAED,SAASG,UAAT,OAAmD;AAAA,MAA/B;AAACR,IAAAA,WAAD;AAAcC,IAAAA,IAAd;AAAoBQ,IAAAA;AAApB,GAA+B;AAC/C,sBACI,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAGC,KAAD,IAAW;AACxBD,MAAAA,QAAQ,CAACV,IAAI,CAACC,WAAD,EAAcC,IAAd,CAAL,CAAR;AACAS,MAAAA,KAAK,CAACC,cAAN;AACH,KAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;KATQH,U;AASR;AAED,SAASA,UAAT,EAAqBT,IAArB","sourcesContent":["import { Button } from 'react-bootstrap';\nimport { sha256 } from 'js-sha256';\nimport MineSettings from './MineSettings';\n\n// Parse the mining settings.\nconst difficulty = MineSettings.difficulty;\nconst maximumNonce = MineSettings.maximumNonce;\nconst pattern = MineSettings.pattern;\n\n/* Find a nonce s.t. the hash of the string concatenation of\n * blockNumber, nonce, and data fields (IN THAT ORDER!) results in a hash\n * that starts with n=difficulty many zeros.\n */\nfunction mine(blockNumber, data, prevHash=\"\") {\n    let sequence = null;\n    let hash = null;\n    for (let nonce = 0; nonce <= maximumNonce; nonce++) {\n        sequence = blockNumber.toString() + nonce.toString() + data.toString();\n        hash = sha256(sequence);\n        if (hash.substr(0, difficulty) === pattern) {\n            return nonce;\n        }\n    }\n}\n\nfunction MineButton({blockNumber, data, callback}) {\n    return (\n        <Button onClick={(event) => {\n            callback(mine(blockNumber, data));\n            event.preventDefault();\n        }}>\n            Mine!\n        </Button>\n    );\n};\n\nexport { MineButton, mine }\n"]},"metadata":{},"sourceType":"module"}