{"ast":null,"code":"var _jsxFileName = \"/Users/ericboris/Developer/CSE442/a4/src/components/Blockchain/Blockchain.js\";\nimport React, { Component } from 'react';\nimport { Container } from 'react-bootstrap'; //import Form from 'react-bootstrap';\n//import { sha256 } from 'js-sha256';\n//import {render} from \"react-dom\";\n\nimport SingleBlock from './SingleBlock';\nimport { TitleField, BodyField } from '../Fields'; //import get from '../../descriptionLoader';\n//commented a lot out to get it to show the box\n// function mineBlock(data) {\n//     var difficulty = 4;        // number of zeros required at front of hash\n//     var maximumNonce = 50000; // limit the nonce to this so we don't mine too long\n//     var pattern = '';\n//     for (var x=0; x<difficulty; x++) {\n//         pattern += '0';\n//     }\n//     let hashAndNonce = {};\n//     for (var x = 0; x <= maximumNonce; x++) {\n//         var nonceString = x.toString();\n//         var newData = data + nonceString;\n//         hashAndNonce[0] = (sha256(newData));\n//         if (hashAndNonce[0].substr(0, difficulty) === pattern) {\n//             console.log(\"hashed successfully:\" + hashAndNonce[0])\n//             hashAndNonce[1] = x;\n//             break;\n//         }\n//     }\n//     console.log(hashAndNonce);\n//     //TODO: Update the values of hash and nonce\n//     // this.setState({hash : hashAndNonce[0],\n//     //                nonce: hashAndNonce[1]})  ;\n//     //  return hashAndNonce;\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Blockchain extends Component {\n  constructor(props) {\n    super(props);\n    const [title, body] = [\"Blockchain [WORK IN PROGRESS] \", \"Blockchain's Description\"];\n    this.state = {\n      title,\n      body //blockArray: [1,2,3]\n\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: [/*#__PURE__*/_jsxDEV(TitleField, {\n        titleText: this.state.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BodyField, {\n        bodyText: this.state.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row justify-content-around\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-sm-4\",\n          children: /*#__PURE__*/_jsxDEV(SingleBlock, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-sm-4\",\n          children: /*#__PURE__*/_jsxDEV(SingleBlock, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-sm-4\",\n          children: /*#__PURE__*/_jsxDEV(SingleBlock, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Blockchain;","map":{"version":3,"sources":["/Users/ericboris/Developer/CSE442/a4/src/components/Blockchain/Blockchain.js"],"names":["React","Component","Container","SingleBlock","TitleField","BodyField","Blockchain","constructor","props","title","body","state","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,iBAA1B,C,CACA;AACA;AACA;;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,WAAtC,C,CACA;AAGA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;;;;AAGA,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AAC/BM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,UAAM,CAACC,KAAD,EAAQC,IAAR,IAAgB,CAAC,gCAAD,EAAmC,0BAAnC,CAAtB;AACA,SAAKC,KAAL,GAAa;AACTF,MAAAA,KADS;AAETC,MAAAA,IAFS,CAGT;;AAHS,KAAb;AAKH;;AAEDE,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,SAAS,EAAE,KAAKD,KAAL,CAAWF;AAAlC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,SAAD;AAAW,QAAA,QAAQ,EAAE,KAAKE,KAAL,CAAWD;AAAhC;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAK,QAAA,KAAK,EAAG,4BAAb;AAAA,gCACI;AAAK,UAAA,KAAK,EAAG,UAAb;AAAA,iCACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,KAAK,EAAG,UAAb;AAAA,iCACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAOI;AAAK,UAAA,KAAK,EAAG,UAAb;AAAA,iCACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAiBH;;AA7B8B;;AAgCnC,eAAeJ,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Container } from 'react-bootstrap';\n//import Form from 'react-bootstrap';\n//import { sha256 } from 'js-sha256';\n//import {render} from \"react-dom\";\nimport SingleBlock from './SingleBlock';\nimport { TitleField, BodyField } from '../Fields';\n//import get from '../../descriptionLoader';\n\n\n//commented a lot out to get it to show the box\n\n// function mineBlock(data) {\n//     var difficulty = 4;        // number of zeros required at front of hash\n//     var maximumNonce = 50000; // limit the nonce to this so we don't mine too long\n\n\n//     var pattern = '';\n//     for (var x=0; x<difficulty; x++) {\n//         pattern += '0';\n//     }\n\n//     let hashAndNonce = {};\n//     for (var x = 0; x <= maximumNonce; x++) {\n//         var nonceString = x.toString();\n//         var newData = data + nonceString;\n//         hashAndNonce[0] = (sha256(newData));\n//         if (hashAndNonce[0].substr(0, difficulty) === pattern) {\n//             console.log(\"hashed successfully:\" + hashAndNonce[0])\n//             hashAndNonce[1] = x;\n//             break;\n//         }\n//     }\n//     console.log(hashAndNonce);\n//     //TODO: Update the values of hash and nonce\n\n//     // this.setState({hash : hashAndNonce[0],\n//     //                nonce: hashAndNonce[1]})  ;\n\n//     //  return hashAndNonce;\n// }\n\n\nclass Blockchain extends Component {\n    constructor(props) {\n        super(props);\n        const [title, body] = [\"Blockchain [WORK IN PROGRESS] \", \"Blockchain's Description\"];\n        this.state = {\n            title,\n            body,\n            //blockArray: [1,2,3]\n        }\n    }\n\n    render() {\n        return (\n            <Container fluid>\n                <TitleField titleText={this.state.title} />\n                <BodyField bodyText={this.state.body} />\n                <div class = \"row justify-content-around\" >\n                    <div class = \"col-sm-4\">\n                        <SingleBlock  />\n                    </div>\n                    <div class = \"col-sm-4\">\n                        <SingleBlock  />\n                    </div>\n                    <div class = \"col-sm-4\">\n                        <SingleBlock  />\n                    </div>\n                </div>\n            </Container>\n        );\n    }\n}\n\nexport default Blockchain;\n"]},"metadata":{},"sourceType":"module"}