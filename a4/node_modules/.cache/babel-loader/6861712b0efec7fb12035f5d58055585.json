{"ast":null,"code":"var _jsxFileName = \"/Users/ericboris/Developer/CSE442/a4/src/components/Blockchain/Blockchain.js\";\nimport React, { Component } from 'react';\nimport { Container } from 'react-bootstrap';\nimport SingleBlock from './SingleBlock';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultNumBlocks = 3;\n\nclass Blockchain extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hashes: [\"0000000000000000000000000000000000000000000000000000000000000000\", \"0000f727854b50bb95c054b39c1fe5c92e5ebcfa4bcb5dc279f56aa96a365e5a\", \"0000144aa3de04509be9231e910be54b5d8cc6f26be68c7e9cf3ffbb59815a89\", \"\"],\n      blocks: this.initBlocks(defaultNumBlocks)\n    };\n    console.log('BLOCKS: ', this.state.blocks);\n  }\n\n  handleUpdate(response) {\n    let hashes = this.state.hashes;\n    let index = response.blockIndex;\n    let hash = response.hash;\n    hashes[index] = hash;\n    this.setState({\n      hashes\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    let hashes = this.state.hashes;\n\n    if (prevState.hashes !== hashes) {\n      this.setState({\n        hashes\n      });\n    }\n  }\n\n  initBlocks(numBlocks) {\n    let blocks = [];\n    let hashLength = 64;\n\n    const getPrevHash = i => i === 0 ? '0'.repeat(hashLength) : blocks[i - 1].hash;\n\n    for (let i = 0; i < numBlocks; i++) {\n      let block = {\n        blockNumber: i + 1,\n        nonce: 0,\n        data: '',\n        prevHash: getPrevHash(i),\n        hash: '123'\n      };\n      blocks.push(block);\n    }\n\n    return blocks;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row justify-content-around\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-sm-4\",\n          children: /*#__PURE__*/_jsxDEV(SingleBlock, {\n            blockNumber: 1,\n            blockIndex: 1,\n            startNonce: 11316,\n            prevHash: this.state.hashes[0],\n            callback: response => this.handleUpdate(response)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-sm-4\",\n          children: /*#__PURE__*/_jsxDEV(SingleBlock, {\n            blockNumber: 2,\n            blockIndex: 2,\n            startNonce: 35230,\n            prevHash: this.state.hashes[1],\n            callback: response => this.handleUpdate(response)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-sm-4\",\n          children: /*#__PURE__*/_jsxDEV(SingleBlock, {\n            blockNumber: 3,\n            blockIndex: 3,\n            startNonce: 12937,\n            prevHash: this.state.hashes[2],\n            callback: response => this.handleUpdate(response)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Blockchain;","map":{"version":3,"sources":["/Users/ericboris/Developer/CSE442/a4/src/components/Blockchain/Blockchain.js"],"names":["React","Component","Container","SingleBlock","defaultNumBlocks","Blockchain","constructor","props","state","hashes","blocks","initBlocks","console","log","handleUpdate","response","index","blockIndex","hash","setState","componentDidUpdate","prevProps","prevState","numBlocks","hashLength","getPrevHash","i","repeat","block","blockNumber","nonce","data","prevHash","push","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,gBAAgB,GAAG,CAAzB;;AAEA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AAC/BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,CAAC,kEAAD,EACA,kEADA,EAEA,kEAFA,EAGA,EAHA,CADC;AAKTC,MAAAA,MAAM,EAAE,KAAKC,UAAL,CAAgBP,gBAAhB;AALC,KAAb;AAOAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,KAAKL,KAAL,CAAWE,MAAnC;AACH;;AAEDI,EAAAA,YAAY,CAACC,QAAD,EAAW;AACnB,QAAIN,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAAxB;AACA,QAAIO,KAAK,GAAGD,QAAQ,CAACE,UAArB;AACA,QAAIC,IAAI,GAAGH,QAAQ,CAACG,IAApB;AACAT,IAAAA,MAAM,CAACO,KAAD,CAAN,GAAgBE,IAAhB;AACA,SAAKC,QAAL,CAAc;AAACV,MAAAA;AAAD,KAAd;AACH;;AAEDW,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACrC,QAAIb,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAAxB;;AACA,QAAIa,SAAS,CAACb,MAAV,KAAqBA,MAAzB,EAAiC;AAC7B,WAAKU,QAAL,CAAc;AAACV,QAAAA;AAAD,OAAd;AACH;AACJ;;AAEDE,EAAAA,UAAU,CAACY,SAAD,EAAY;AAClB,QAAIb,MAAM,GAAG,EAAb;AACA,QAAIc,UAAU,GAAG,EAAjB;;AAEA,UAAMC,WAAW,GAAIC,CAAD,IAAOA,CAAC,KAAK,CAAN,GAAU,IAAIC,MAAJ,CAAWH,UAAX,CAAV,GAAmCd,MAAM,CAACgB,CAAC,GAAG,CAAL,CAAN,CAAcR,IAA5E;;AAEA,SAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,SAApB,EAA+BG,CAAC,EAAhC,EAAoC;AAChC,UAAIE,KAAK,GAAG;AACRC,QAAAA,WAAW,EAAEH,CAAC,GAAG,CADT;AAERI,QAAAA,KAAK,EAAE,CAFC;AAGRC,QAAAA,IAAI,EAAE,EAHE;AAIRC,QAAAA,QAAQ,EAAEP,WAAW,CAACC,CAAD,CAJb;AAKRR,QAAAA,IAAI,EAAE;AALE,OAAZ;AAOAR,MAAAA,MAAM,CAACuB,IAAP,CAAYL,KAAZ;AACH;;AACD,WAAOlB,MAAP;AACH;;AAEDwB,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA,6BAEI;AAAK,QAAA,KAAK,EAAG,4BAAb;AAAA,gCACI;AAAK,UAAA,KAAK,EAAG,UAAb;AAAA,iCACI,QAAC,WAAD;AAAa,YAAA,WAAW,EAAE,CAA1B;AAA6B,YAAA,UAAU,EAAE,CAAzC;AAA4C,YAAA,UAAU,EAAI,KAA1D;AAAiE,YAAA,QAAQ,EAAE,KAAK1B,KAAL,CAAWC,MAAX,CAAkB,CAAlB,CAA3E;AAAiG,YAAA,QAAQ,EAAGM,QAAD,IAAc,KAAKD,YAAL,CAAkBC,QAAlB;AAAzH;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,KAAK,EAAG,UAAb;AAAA,iCACI,QAAC,WAAD;AAAa,YAAA,WAAW,EAAE,CAA1B;AAA6B,YAAA,UAAU,EAAE,CAAzC;AAA4C,YAAA,UAAU,EAAI,KAA1D;AAAiE,YAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWC,MAAX,CAAkB,CAAlB,CAA3E;AAAiG,YAAA,QAAQ,EAAGM,QAAD,IAAc,KAAKD,YAAL,CAAkBC,QAAlB;AAAzH;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAOI;AAAK,UAAA,KAAK,EAAG,UAAb;AAAA,iCACI,QAAC,WAAD;AAAa,YAAA,WAAW,EAAE,CAA1B;AAA6B,YAAA,UAAU,EAAE,CAAzC;AAA4C,YAAA,UAAU,EAAI,KAA1D;AAAiE,YAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWC,MAAX,CAAkB,CAAlB,CAA3E;AAAiG,YAAA,QAAQ,EAAGM,QAAD,IAAc,KAAKD,YAAL,CAAkBC,QAAlB;AAAzH;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBH;;AAhE8B;;AAmEnC,eAAeV,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Container } from 'react-bootstrap';\nimport SingleBlock from './SingleBlock';\n\nconst defaultNumBlocks = 3;\n\nclass Blockchain extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hashes: [\"0000000000000000000000000000000000000000000000000000000000000000\",\n                    \"0000f727854b50bb95c054b39c1fe5c92e5ebcfa4bcb5dc279f56aa96a365e5a\", \n                    \"0000144aa3de04509be9231e910be54b5d8cc6f26be68c7e9cf3ffbb59815a89\", \n                    \"\"],\n            blocks: this.initBlocks(defaultNumBlocks)\n        }\n        console.log('BLOCKS: ', this.state.blocks);\n    }\n\n    handleUpdate(response) {\n        let hashes = this.state.hashes;\n        let index = response.blockIndex;\n        let hash = response.hash;\n        hashes[index] = hash;\n        this.setState({hashes}); \n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        let hashes = this.state.hashes;\n        if (prevState.hashes !== hashes) {\n            this.setState({hashes});\n        }\n    }\n\n    initBlocks(numBlocks) {\n        let blocks = [];\n        let hashLength = 64;\n\n        const getPrevHash = (i) => i === 0 ? '0'.repeat(hashLength) : blocks[i - 1].hash;\n\n        for (let i = 0; i < numBlocks; i++) {\n            let block = {\n                blockNumber: i + 1,\n                nonce: 0,\n                data: '',\n                prevHash: getPrevHash(i),\n                hash: '123',\n            }\n            blocks.push(block);\n        }\n        return blocks;\n    }\n\n    render() {\n        return (\n            <Container fluid>\n            \n                <div class = \"row justify-content-around\" >\n                    <div class = \"col-sm-4\">\n                        <SingleBlock blockNumber={1} blockIndex={1} startNonce = {11316} prevHash={this.state.hashes[0]} callback={(response) => this.handleUpdate(response)} />\n                    </div>\n                    <div class = \"col-sm-4\">\n                        <SingleBlock blockNumber={2} blockIndex={2} startNonce = {35230} prevHash={this.state.hashes[1]} callback={(response) => this.handleUpdate(response)} />\n                    </div>\n                    <div class = \"col-sm-4\">\n                        <SingleBlock blockNumber={3} blockIndex={3} startNonce = {12937} prevHash={this.state.hashes[2]} callback={(response) => this.handleUpdate(response)} />\n                    </div>\n                </div>\n            </Container>\n        );\n    }\n}\n\nexport default Blockchain;\n"]},"metadata":{},"sourceType":"module"}