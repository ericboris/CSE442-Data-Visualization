{"ast":null,"code":"var _jsxFileName = \"/Users/ericboris/Developer/CSE442/a4/src/components/MineButton.js\";\nimport { useState, useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { sha256 } from 'js-sha256';\nimport MineSettings from './MineSettings'; // Parse the mining settings.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst difficulty = MineSettings.difficulty;\nconst maximumNonce = MineSettings.maximumNonce;\nconst pattern = MineSettings.pattern;\n/*\nfunction mine(blockNumber, data, prevHash=\"\", block, setBlock) {\n    let sequence = null;\n    let hash = \"\";\n    for (let nonce = 0; nonce < maximumNonce; nonce++) {\n        hash = sha256(String(blockNumber + nonce + data + prevHash));\n        if (hash.substr(0, difficulty) === pattern) {\n            setBlock({...block, nonce});\n            return;\n        } else if (nonce % 10 === 0) {\n            setTimeout(() => {\n                setBlock({...block, nonce});\n            }, nonce);\n        }\n    }\n}\n*/\n\nfunction* mine(blockNumber, data) {\n  let prevHash = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n  let sequence = null;\n  let hash = \"\";\n\n  for (let nonce = 0; nonce < maximumNonce; nonce++) {\n    hash = sha256(String(blockNumber + nonce + data + prevHash));\n\n    if (hash.substr(0, difficulty) === pattern) {\n      yield nonce;\n    } else if (nonce % 10 === 0) {\n      setTimeout(() => {}, nonce);\n    }\n  }\n}\n/*\nfunction simulateMining() {\n    return new Promise((resolve) => setTimeout(resolve, 5000));\n}\n*/\n\n/*\nfunction simulateMine(i) {\n    setTimeout(() => {\n        console.log(\"I=\", i);\n    }, 2000);\n}\n\nfunction handleOnClick(nonces, block, setBlock) {\n    for (let i = 0; i < nonces.length; i++) {\n        simulateMine(i);\n    }  \n};\n*/\n\n\nfunction MineButton(_ref) {\n  let {\n    blockNumber,\n    data,\n    prevHash = \"\",\n    block,\n    setBlock\n  } = _ref;\n  const mineIter = mine(blockNumber, data, prevHash);\n  return /*#__PURE__*/_jsxDEV(Button, {\n    onClick: () => setBlock({ ...block,\n      nonce: mineIter.next().value\n    }),\n    children: 'Mine!'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_c = MineButton;\n;\nexport { MineButton, mine };\n\nvar _c;\n\n$RefreshReg$(_c, \"MineButton\");","map":{"version":3,"sources":["/Users/ericboris/Developer/CSE442/a4/src/components/MineButton.js"],"names":["useState","useEffect","Button","sha256","MineSettings","difficulty","maximumNonce","pattern","mine","blockNumber","data","prevHash","sequence","hash","nonce","String","substr","setTimeout","MineButton","block","setBlock","mineIter","next","value"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB,C,CAEA;;;AACA,MAAMC,UAAU,GAAGD,YAAY,CAACC,UAAhC;AACA,MAAMC,YAAY,GAAGF,YAAY,CAACE,YAAlC;AACA,MAAMC,OAAO,GAAGH,YAAY,CAACG,OAA7B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAUC,IAAV,CAAeC,WAAf,EAA4BC,IAA5B,EAA+C;AAAA,MAAbC,QAAa,uEAAJ,EAAI;AAC3C,MAAIC,QAAQ,GAAG,IAAf;AACA,MAAIC,IAAI,GAAG,EAAX;;AACA,OAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGR,YAA5B,EAA0CQ,KAAK,EAA/C,EAAmD;AAC/CD,IAAAA,IAAI,GAAGV,MAAM,CAACY,MAAM,CAACN,WAAW,GAAGK,KAAd,GAAsBJ,IAAtB,GAA6BC,QAA9B,CAAP,CAAb;;AACA,QAAIE,IAAI,CAACG,MAAL,CAAY,CAAZ,EAAeX,UAAf,MAA+BE,OAAnC,EAA4C;AACxC,YAAMO,KAAN;AACH,KAFD,MAEO,IAAIA,KAAK,GAAG,EAAR,KAAe,CAAnB,EAAsB;AACzBG,MAAAA,UAAU,CAAC,MAAM,CAChB,CADS,EACPH,KADO,CAAV;AAEH;AACJ;AACJ;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASI,UAAT,OAAuE;AAAA,MAAnD;AAACT,IAAAA,WAAD;AAAcC,IAAAA,IAAd;AAAoBC,IAAAA,QAAQ,GAAC,EAA7B;AAAiCQ,IAAAA,KAAjC;AAAwCC,IAAAA;AAAxC,GAAmD;AACnE,QAAMC,QAAQ,GAAGb,IAAI,CAACC,WAAD,EAAcC,IAAd,EAAoBC,QAApB,CAArB;AACA,sBACI,QAAC,MAAD;AACI,IAAA,OAAO,EAAE,MAAMS,QAAQ,CAAC,EAAC,GAAGD,KAAJ;AAAWL,MAAAA,KAAK,EAAEO,QAAQ,CAACC,IAAT,GAAgBC;AAAlC,KAAD,CAD3B;AAAA,cAGK;AAHL;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;KATQL,U;AASR;AAED,SAASA,UAAT,EAAqBV,IAArB","sourcesContent":["import { useState, useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { sha256 } from 'js-sha256';\nimport MineSettings from './MineSettings';\n\n// Parse the mining settings.\nconst difficulty = MineSettings.difficulty;\nconst maximumNonce = MineSettings.maximumNonce;\nconst pattern = MineSettings.pattern;\n\n/*\nfunction mine(blockNumber, data, prevHash=\"\", block, setBlock) {\n    let sequence = null;\n    let hash = \"\";\n    for (let nonce = 0; nonce < maximumNonce; nonce++) {\n        hash = sha256(String(blockNumber + nonce + data + prevHash));\n        if (hash.substr(0, difficulty) === pattern) {\n            setBlock({...block, nonce});\n            return;\n        } else if (nonce % 10 === 0) {\n            setTimeout(() => {\n                setBlock({...block, nonce});\n            }, nonce);\n        }\n    }\n}\n*/\n\nfunction* mine(blockNumber, data, prevHash=\"\") {\n    let sequence = null;\n    let hash = \"\";\n    for (let nonce = 0; nonce < maximumNonce; nonce++) {\n        hash = sha256(String(blockNumber + nonce + data + prevHash));\n        if (hash.substr(0, difficulty) === pattern) {\n            yield nonce;\n        } else if (nonce % 10 === 0) {\n            setTimeout(() => {\n            }, nonce);\n        }\n    }\n}\n\n/*\nfunction simulateMining() {\n    return new Promise((resolve) => setTimeout(resolve, 5000));\n}\n*/\n\n/*\nfunction simulateMine(i) {\n    setTimeout(() => {\n        console.log(\"I=\", i);\n    }, 2000);\n}\n\nfunction handleOnClick(nonces, block, setBlock) {\n    for (let i = 0; i < nonces.length; i++) {\n        simulateMine(i);\n    }  \n};\n*/\n\nfunction MineButton({blockNumber, data, prevHash=\"\", block, setBlock}) {\n    const mineIter = mine(blockNumber, data, prevHash);\n    return (\n        <Button \n            onClick={() => setBlock({...block, nonce: mineIter.next().value})}\n        >\n            {'Mine!'}\n        </Button>\n    );\n};\n\nexport { MineButton, mine }\n"]},"metadata":{},"sourceType":"module"}