{"ast":null,"code":"import _classCallCheck from\"/Users/ericboris/Developer/CSE442/a4/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/ericboris/Developer/CSE442/a4/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/ericboris/Developer/CSE442/a4/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/ericboris/Developer/CSE442/a4/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/ericboris/Developer/CSE442/a4/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Container,Form,Button}from'react-bootstrap';import{sha256}from'js-sha256';//import {render} from \"react-dom\";\nimport get from'../descriptionLoader';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var difficulty=4;// number of zeros required at front of hash\nvar maximumNonce=500000;// limit the nonce to this so we don't mine too long\nvar SingleBlock=/*#__PURE__*/function(_Component){_inherits(SingleBlock,_Component);var _super=_createSuper(SingleBlock);function SingleBlock(props){var _this;_classCallCheck(this,SingleBlock);_this=_super.call(this,props);_this.state={pattern:'0'.repeat(difficulty),blockNumber:1,nonce:72608,data:\"\",hash:sha256(\"1\"+\"72608\"+\"\"),//green\ncolor:\"#50C878\"};_this.getSequence=_this.getSequence.bind(_assertThisInitialized(_this));_this.mine=_this.mine.bind(_assertThisInitialized(_this));_this.handleColorChange=_this.handleColorChange.bind(_assertThisInitialized(_this));return _this;}_createClass(SingleBlock,[{key:\"handleColorChange\",value:function handleColorChange(){var col=this.state.color;this.props.getColor(col);}},{key:\"getSequence\",value:function getSequence(){return this.blockNumber.value.toString()+this.nonce.value.toString()+this.data.value.toString();}/* Find a nonce s.t. the hash of the string concatenation of\n     * blockNumber, nonce, and data fields (IN THAT ORDER!) results in a hash\n     * that starts with n=difficulty many zeros.\n     * Updates the state with the found nonce and hash.\n     */},{key:\"mine\",value:function mine(blockNumber,data){var sequence=null;var hash=null;for(var nonce=0;nonce<=maximumNonce;nonce++){sequence=blockNumber.toString()+nonce.toString()+data.toString();hash=sha256(sequence);if(hash.substr(0,difficulty)===this.state.pattern){this.setState({hash:hash,nonce:nonce});return;}}this.setState({color:\"#50C878\"});this.handleColorChange(this.state.color);}},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/_jsxs(Container,{fluid:true,children:[/*#__PURE__*/_jsxs(Form,{onChange:function onChange(event){event.preventDefault();_this2.setState({blockNumber:_this2.blockNumber.value,nonce:_this2.nonce.value,data:_this2.data.value,hash:sha256(_this2.getSequence()),//red\ncolor:\"#F75D59\"});},children:[/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Block Number:\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"number\",ref:function ref(input){return _this2.blockNumber=input;},value:this.state.blockNumber})]}),/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Nonce:\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"number\",ref:function ref(input){return _this2.nonce=input;},value:this.state.nonce})]}),/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Data:\"}),/*#__PURE__*/_jsx(Form.Control,{as:\"textarea\",type:\"text\",placeholder:\"\",ref:function ref(input){return _this2.data=input;},value:this.state.data})]}),/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Hash:\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",value:this.state.hash,readOnly:true})]})]}),/*#__PURE__*/_jsx(Button,{onClick:function onClick(event){event.preventDefault();_this2.mine(_this2.state.blockNumber,_this2.state.data);},children:\"Mine!\"})]});}}]);return SingleBlock;}(Component);export default SingleBlock;","map":{"version":3,"sources":["/Users/ericboris/Developer/CSE442/a4/src/components/SingleBlock.js"],"names":["React","Component","Container","Form","Button","sha256","get","difficulty","maximumNonce","SingleBlock","props","state","pattern","repeat","blockNumber","nonce","data","hash","color","getSequence","bind","mine","handleColorChange","col","getColor","value","toString","sequence","substr","setState","event","preventDefault","input"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Container, Form, Button } from 'react-bootstrap';\nimport { sha256 } from 'js-sha256';\n//import {render} from \"react-dom\";\nimport get from '../descriptionLoader';\n\nlet difficulty = 4;        // number of zeros required at front of hash\nlet maximumNonce = 500000; // limit the nonce to this so we don't mine too long\n\nclass SingleBlock extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pattern: '0'.repeat(difficulty),\n            blockNumber: 1,\n            nonce: 72608,\n            data: \"\",\n            hash: sha256(\"1\" + \"72608\" + \"\"),\n            //green\n            color: \"#50C878\"\n        };\n        this.getSequence = this.getSequence.bind(this);\n        this.mine = this.mine.bind(this);\n        this.handleColorChange = this.handleColorChange.bind(this);\n    }\n\n    handleColorChange() {\n        var col = this.state.color\n        this.props.getColor(col)        \n    }\n\n    getSequence() {\n        return (this.blockNumber.value.toString() + this.nonce.value.toString() + this.data.value.toString());\n    }\n\n    /* Find a nonce s.t. the hash of the string concatenation of\n     * blockNumber, nonce, and data fields (IN THAT ORDER!) results in a hash\n     * that starts with n=difficulty many zeros.\n     * Updates the state with the found nonce and hash.\n     */\n    mine(blockNumber, data) {\n        let sequence = null;\n        let hash = null;\n        for (let nonce = 0; nonce <= maximumNonce; nonce++) {\n            sequence = blockNumber.toString() + nonce.toString() + data.toString();\n            hash = sha256(sequence);\n            if (hash.substr(0, difficulty) === this.state.pattern) {\n                this.setState({hash, nonce});\n                return;\n            }\n        }\n        this.setState({color: \"#50C878\"});\n        this.handleColorChange(this.state.color);\n\n   }\n\n    render() {\n        return (\n                <Container fluid>\n                    <Form  onChange={(event) => {\n                        event.preventDefault();\n                        this.setState({\n                            blockNumber: this.blockNumber.value,\n                            nonce: this.nonce.value,\n                            data: this.data.value,\n                            hash : sha256(this.getSequence()),\n                            //red\n                            color: \"#F75D59\"\n                        });\n                    }}>\n                        <Form.Group>\n                            <Form.Label>\n                                Block Number:\n                            </Form.Label>\n                            <Form.Control\n                                type=\"number\"\n                                ref={(input) =>\n                                    this.blockNumber = input\n                               }\n                                value = {this.state.blockNumber}\n                            />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>\n                                Nonce:\n                            </Form.Label>\n                            <Form.Control\n                                type=\"number\"\n                                ref={(input) =>\n                                    this.nonce = input\n                               }\n                                value = {this.state.nonce}\n                            />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>\n                                Data:\n                            </Form.Label>\n                            <Form.Control\n                                as=\"textarea\"\n                                type=\"text\"\n                                placeholder=\"\"\n                                ref={(input) =>\n                                    this.data = input\n                                }\n                                value = {this.state.data}\n                            />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>\n                                Hash:\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                value= {this.state.hash}\n                                readOnly\n                            />\n                        </Form.Group>\n                    </Form>\n                    <Button onClick={(event) => {\n                        event.preventDefault();\n                        this.mine(this.state.blockNumber, this.state.data);\n                    }}>\n                        Mine!\n                    </Button>\n                </Container>\n        );\n    }\n}\n\nexport default SingleBlock;"]},"metadata":{},"sourceType":"module"}