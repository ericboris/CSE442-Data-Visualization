{"ast":null,"code":"var _jsxFileName = \"/Users/ericboris/Developer/CSE442/a4/src/components/Block/Block.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Container, Form } from 'react-bootstrap';\nimport { sha256 } from 'js-sha256';\nimport { TitleField, BodyField, NumberField, ReadOnlyTextField, TextAreaField } from '../Fields';\nimport { MineButton } from '../MineButton';\nimport MineSettings from '../MineSettings';\nimport description from './description'; // Parse the mining settings.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst difficulty = MineSettings.difficulty;\nconst pattern = MineSettings.pattern; // Define component globals.\n\nconst GREEN = '#50C878';\nconst RED = '#FF0000';\nconst BLOCK_WIDTH = 400;\nconst BLOCK_HEIGHT = 410;\n\nfunction Block(props) {\n  _s();\n\n  const [blockNumber, setBlockNumber] = useState(\"1\");\n  const [nonce, setNonce] = useState(\"72608\");\n  const [data, setData] = useState(\"\");\n  const [hash, setHash] = useState(\"0000eb\");\n  const [color, setColor] = useState(GREEN);\n  const [isSigned, setIsSigned] = useState(true);\n  useEffect(() => {\n    setHash(sha256(blockNumber + nonce + data));\n  }, [blockNumber, nonce, data]);\n  useEffect(() => {\n    setIsSigned(hash.substr(0, difficulty) === pattern ? true : false);\n  }, [hash]);\n  useEffect(() => {\n    setColor(isSigned ? GREEN : RED);\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(TitleField, {\n      titleText: description.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(BodyField, {\n      bodyText: description.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        'width': BLOCK_WIDTH,\n        'height': BLOCK_HEIGHT,\n        'background-color': color\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(NumberField, {\n          label: 'Block Number:',\n          value: blockNumber,\n          callback: blockNumber => setBlockNumber(String(blockNumber))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(NumberField, {\n          label: 'Nonce:',\n          value: nonce,\n          callback: nonce => setNonce(String(nonce))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextAreaField, {\n          label: 'Data:',\n          callback: data => setData(String(data))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ReadOnlyTextField, {\n          label: 'Hash:',\n          value: hash\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MineButton, {\n          blockNumber: blockNumber,\n          data: data,\n          callback: nonce => setNonce(String(nonce))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Block, \"6QYq+Axl9xHpWPcB4czF7M3ySUc=\");\n\n_c = Block;\nexport default Block;\n\nvar _c;\n\n$RefreshReg$(_c, \"Block\");","map":{"version":3,"sources":["/Users/ericboris/Developer/CSE442/a4/src/components/Block/Block.js"],"names":["React","useState","useEffect","Container","Form","sha256","TitleField","BodyField","NumberField","ReadOnlyTextField","TextAreaField","MineButton","MineSettings","description","difficulty","pattern","GREEN","RED","BLOCK_WIDTH","BLOCK_HEIGHT","Block","props","blockNumber","setBlockNumber","nonce","setNonce","data","setData","hash","setHash","color","setColor","isSigned","setIsSigned","substr","title","body","String"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Form } from 'react-bootstrap';\nimport { sha256 } from 'js-sha256';\nimport { TitleField, BodyField, NumberField, ReadOnlyTextField, TextAreaField } from '../Fields';\nimport { MineButton } from '../MineButton';\nimport MineSettings from '../MineSettings';\nimport description from './description';\n\n// Parse the mining settings.\nconst difficulty = MineSettings.difficulty;\nconst pattern = MineSettings.pattern;\n\n// Define component globals.\nconst GREEN = '#50C878';\nconst RED = '#FF0000';\n\nconst BLOCK_WIDTH = 400;\nconst BLOCK_HEIGHT = 410;\n\nfunction Block(props) {\n    const [blockNumber, setBlockNumber] = useState(\"1\");\n    const [nonce, setNonce] = useState(\"72608\");\n    const [data, setData] = useState(\"\");\n    const [hash, setHash] = useState(\"0000eb\");\n    const [color, setColor] = useState(GREEN);\n    const [isSigned, setIsSigned] = useState(true);\n\n    useEffect(() => {\n        setHash(sha256(blockNumber + nonce + data));\n    }, [blockNumber, nonce, data]);\n\n    useEffect(() => {\n        setIsSigned(hash.substr(0, difficulty) === pattern ? true : false);\n    }, [hash]);\n\n    useEffect(() => {\n        setColor(isSigned ? GREEN : RED);\n    });\n    \n    return (\n        <Container>\n            <TitleField titleText={description.title} />\n            <BodyField bodyText={description.body} />\n            <Container \n                style={{\n                    'width':BLOCK_WIDTH,\n                    'height':BLOCK_HEIGHT,\n                    'background-color':color\n                }}\n            >\n                <Form>\n                    <br/>\n                    <NumberField \n                        label={'Block Number:'} \n                        value={blockNumber} \n                        callback={(blockNumber) => setBlockNumber(String(blockNumber))}\n                    />\n                    <NumberField \n                        label={'Nonce:'} \n                        value={nonce} \n                        callback={(nonce) => setNonce(String(nonce))} \n                    />\n                    <TextAreaField \n                        label={'Data:'} \n                        callback={(data) => setData(String(data))}\n                    />\n                    <ReadOnlyTextField \n                        label={'Hash:'}\n                        value={hash}\n                    />\n                    <br/>\n                    <MineButton \n                        blockNumber={blockNumber} \n                        data={data} \n                        callback={(nonce) => setNonce(String(nonce))}\n                    />\n                </Form>\n            </Container>\n        </Container>\n    );\n}\n\nexport default Block;\n"]},"metadata":{},"sourceType":"module"}