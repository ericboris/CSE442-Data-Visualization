{"ast":null,"code":"var _jsxFileName = \"/Users/ericboris/Developer/CSE442/a4/src/components/Block/Block.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Container, Form } from 'react-bootstrap';\nimport { sha256 } from 'js-sha256';\nimport { TitleField, BodyField, NumberField, ReadOnlyTextField, TextAreaField } from '../Fields';\nimport { MineButton } from '../MineButton';\nimport MineSettings from '../MineSettings';\nimport description from './description';\nimport { SwitchButton } from '../Switch';\nimport DefaultBlocks from '../Blockchain/DefaultBlocks'; // Parse the mining settings.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst difficulty = MineSettings.difficulty;\nconst pattern = MineSettings.pattern; // Define component globals.\n\nconst GREEN = '#50C878';\nconst RED = '#FF0000';\nconst BLOCK_WIDTH = 350;\nconst BLOCK_HEIGHT = 450;\nconst block = DefaultBlocks.block1;\n\nfunction Block(props) {\n  _s();\n\n  const [blockNumber, setBlockNumber] = useState(block.blockNumber);\n  const [nonce, setNonce] = useState(block.nonce);\n  const [data, setData] = useState(block.data);\n  const [hash, setHash] = useState(block.hash);\n  const [isSigned, setIsSigned] = useState(true); //        setHash(String(sha256(blockNumber + nonce + data)));\n\n  useEffect(() => {\n    setIsSigned(hash.substr(0, difficulty) === pattern ? true : false);\n  }, [hash]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(TitleField, {\n      titleText: description.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(BodyField, {\n      bodyText: description.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        'width': BLOCK_WIDTH,\n        'height': BLOCK_HEIGHT,\n        'background-color': isSigned ? GREEN : RED\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(NumberField, {\n          label: 'Block Number:',\n          value: blockNumber,\n          callback: blockNumber => setBlockNumber(blockNumber)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(NumberField, {\n          label: 'Nonce:',\n          value: nonce,\n          callback: nonce => setNonce(nonce)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextAreaField, {\n          label: 'Data:',\n          callback: data => setData(data)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ReadOnlyTextField, {\n          label: 'Hash:',\n          value: hash\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MineButton, {\n          blockNumber: blockNumber,\n          data: data,\n          callback: nonce => setNonce(nonce)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SwitchButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Block, \"Ga3z4Z9pKBRbSBDOXetnnngKiaY=\");\n\n_c = Block;\nexport default Block;\n\nvar _c;\n\n$RefreshReg$(_c, \"Block\");","map":{"version":3,"sources":["/Users/ericboris/Developer/CSE442/a4/src/components/Block/Block.js"],"names":["React","useState","useEffect","Container","Form","sha256","TitleField","BodyField","NumberField","ReadOnlyTextField","TextAreaField","MineButton","MineSettings","description","SwitchButton","DefaultBlocks","difficulty","pattern","GREEN","RED","BLOCK_WIDTH","BLOCK_HEIGHT","block","block1","Block","props","blockNumber","setBlockNumber","nonce","setNonce","data","setData","hash","setHash","isSigned","setIsSigned","substr","title","body"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Form } from 'react-bootstrap';\nimport { sha256 } from 'js-sha256';\nimport { TitleField, BodyField, NumberField, ReadOnlyTextField, TextAreaField } from '../Fields';\nimport { MineButton } from '../MineButton';\nimport MineSettings from '../MineSettings';\nimport description from './description';\nimport { SwitchButton } from '../Switch';\nimport DefaultBlocks from '../Blockchain/DefaultBlocks';\n\n// Parse the mining settings.\nconst difficulty = MineSettings.difficulty;\nconst pattern = MineSettings.pattern;\n\n// Define component globals.\nconst GREEN = '#50C878';\nconst RED = '#FF0000';\n\nconst BLOCK_WIDTH = 350;\nconst BLOCK_HEIGHT = 450;\n\nconst block = DefaultBlocks.block1;\n\nfunction Block(props) {\n    const [blockNumber, setBlockNumber] = useState(block.blockNumber);\n    const [nonce, setNonce] = useState(block.nonce);\n    const [data, setData] = useState(block.data);\n    const [hash, setHash] = useState(block.hash);\n    const [isSigned, setIsSigned] = useState(true);\n\n    //        setHash(String(sha256(blockNumber + nonce + data)));\n\n    useEffect(() => {\n        setIsSigned(hash.substr(0, difficulty) === pattern ? true : false);\n    }, [hash]);\n\n    return (\n        <Container>\n            <TitleField titleText={description.title} />\n            <BodyField bodyText={description.body} />\n            <Container \n                style={{\n                    'width':BLOCK_WIDTH,\n                    'height':BLOCK_HEIGHT,\n                    'background-color':isSigned ? GREEN : RED\n                }}\n            >\n                <Form>\n                    <br/>\n                    <NumberField \n                        label={'Block Number:'} \n                        value={blockNumber} \n                        callback={(blockNumber) => setBlockNumber(blockNumber)}\n                    />\n                    <NumberField \n                        label={'Nonce:'} \n                        value={nonce} \n                        callback={(nonce) => setNonce(nonce)} \n                    />\n                    <TextAreaField \n                        label={'Data:'} \n                        callback={(data) => setData(data)}\n                    />\n                    <ReadOnlyTextField \n                        label={'Hash:'}\n                        value={hash}\n                    />\n                    <br/>\n                    <MineButton \n                        blockNumber={blockNumber} \n                        data={data} \n                        callback={(nonce) => setNonce(nonce)}\n                    />\n                    <SwitchButton\n                    />\n                </Form>\n            </Container>\n        </Container>\n    );\n}\n\nexport default Block;\n"]},"metadata":{},"sourceType":"module"}