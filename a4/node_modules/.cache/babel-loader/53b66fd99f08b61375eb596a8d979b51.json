{"ast":null,"code":"var _jsxFileName = \"/Users/ericboris/Developer/CSE442/a4/src/components/SingleBlock.js\";\nimport React, { Component } from 'react';\nimport { Container, Form } from 'react-bootstrap';\nimport { sha256 } from 'js-sha256';\nimport { NumberField, ReadOnlyTextField, TextAreaField } from './Fields';\nimport MineButton from './MineButton';\nimport MineSettings from './MineSettings'; // Parse the mining settings.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst difficulty = MineSettings.difficulty;\nconst pattern = MineSettings.pattern;\n\nclass SingleBlock extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      blockNumber: 1,\n      nonce: 72608,\n      data: \"\",\n      hash: sha256(\"1\" + \"72608\" + \"\"),\n      color: \"#50c878\",\n      signed: true\n    };\n    this.handleColorChange = this.handleColorChange.bind(this);\n  }\n\n  handleColorChange() {\n    var col = this.state.color;\n    this.props.getColor(col);\n  }\n\n  getHash() {\n    return sha256(this.state.blockNumber.toString() + this.state.nonce.toString() + this.state.data.toString());\n  }\n\n  getHashPattern() {\n    return this.state.hash.substr(0, difficulty);\n  }\n\n  isSigned() {\n    return this.getHashPattern() === pattern ? true : false;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    let hash = this.getHash();\n\n    if (prevState.hash !== hash) {\n      this.setState({\n        hash\n      });\n    }\n\n    let signed = this.isSigned();\n\n    if (prevState.signed != signed) {\n      this.setState({\n        signed\n      });\n      this.setState({\n        color: signed ? '#50c878' : '#ff0000'\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        style: {\n          'width': 400,\n          'height': 410,\n          'background-color': this.state.color\n        },\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(NumberField, {\n            label: 'Block Number:',\n            value: this.state.blockNumber,\n            callback: blockNumber => this.setState({\n              blockNumber\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(NumberField, {\n            label: 'Nonce:',\n            value: this.state.nonce,\n            callback: nonce => this.setState({\n              nonce\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextAreaField, {\n            label: 'Data:',\n            callback: data => this.setState({\n              data\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ReadOnlyTextField, {\n            label: 'Hash:',\n            value: this.state.hash\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MineButton, {\n            blockNumber: this.state.blockNumber,\n            data: this.state.data,\n            callback: nonce => this.setState({\n              nonce\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SingleBlock;","map":{"version":3,"sources":["/Users/ericboris/Developer/CSE442/a4/src/components/SingleBlock.js"],"names":["React","Component","Container","Form","sha256","NumberField","ReadOnlyTextField","TextAreaField","MineButton","MineSettings","difficulty","pattern","SingleBlock","constructor","props","state","blockNumber","nonce","data","hash","color","signed","handleColorChange","bind","col","getColor","getHash","toString","getHashPattern","substr","isSigned","componentDidUpdate","prevProps","prevState","setState","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Container, Form } from 'react-bootstrap';\nimport { sha256 } from 'js-sha256';\nimport { NumberField, ReadOnlyTextField, TextAreaField } from './Fields';\nimport MineButton from './MineButton';\nimport MineSettings from './MineSettings';\n\n// Parse the mining settings.\nconst difficulty = MineSettings.difficulty;\nconst pattern = MineSettings.pattern;\n\nclass SingleBlock extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            blockNumber: 1,\n            nonce: 72608,\n            data: \"\",\n            hash: sha256(\"1\" + \"72608\" + \"\"),\n            color: \"#50c878\",\n            signed: true\n        };\n        this.handleColorChange = this.handleColorChange.bind(this);\n    }\n\n    handleColorChange() {\n        var col = this.state.color\n        this.props.getColor(col)        \n    }\n\n    getHash() {\n        return sha256(this.state.blockNumber.toString() + this.state.nonce.toString() + this.state.data.toString());\n    }\n\n    getHashPattern() {\n        return this.state.hash.substr(0, difficulty);\n    }\n\n    isSigned() {\n        return (this.getHashPattern() === pattern) ? true : false;\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        let hash = this.getHash();\n        if (prevState.hash !== hash) {\n            this.setState({hash});\n        }\n\n        let signed = this.isSigned();\n        if (prevState.signed != signed) {\n            this.setState({signed});\n            this.setState({color: signed ? '#50c878' : '#ff0000'});\n        }\n    }\n    \n    render() {\n        return (\n            <Container>\n                <Container \n                    style={{\n                        'width':400,\n                        'height':410,\n                        'background-color':this.state.color\n                    }}\n                >\n                    <Form>\n                        <br/>\n                        <NumberField \n                            label={'Block Number:'} \n                            value={this.state.blockNumber} \n                            callback={(blockNumber) => this.setState({blockNumber})}\n                        />\n                        <NumberField \n                            label={'Nonce:'} \n                            value={this.state.nonce} \n                            callback={(nonce) => this.setState({nonce})} \n                        />\n                        <TextAreaField \n                            label={'Data:'} \n                            callback={(data) => this.setState({data})}\n                        />\n                        <ReadOnlyTextField \n                            label={'Hash:'}\n                            value={this.state.hash}\n                        />\n                        <br/>\n                        <MineButton \n                            blockNumber={this.state.blockNumber} \n                            data={this.state.data} \n                            callback={(nonce) => this.setState({nonce})}\n                        />\n                    </Form>\n                </Container>\n            </Container>\n        );\n    }\n}\n\nexport default SingleBlock;\n"]},"metadata":{},"sourceType":"module"}